{"version":3,"sources":["./src/app/select-location/select-location.page.html","./src/app/select-location/select-location-routing.module.ts","./src/app/select-location/select-location.module.ts","./src/app/select-location/select-location.page.scss","./src/app/select-location/select-location.page.ts"],"names":[],"mappings":"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","file":"select-location-select-location-module.js","sourcesContent":["export default \"<app-header\\n  [showBackButton]=\\\"showBackButton\\\"\\n  [title]=\\\"'selectLocation.title' | translate\\\"\\n  (backButtonClick)=\\\"goBack()\\\"\\n></app-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div class=\\\"flex-container pr\\\">\\n    <app-device-location\\n      [buttonText]=\\\"'buttons.accept'\\\"\\n      [deviceLocation]=\\\"geocodeResult\\\"\\n      (actionButtonClick)=\\\"saveLocation($event)\\\"\\n    ></app-device-location>\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SelectLocationPage } from './select-location.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SelectLocationPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SelectLocationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SelectLocationPageRoutingModule } from './select-location-routing.module';\n\nimport { SelectLocationPage } from './select-location.page';\nimport { SharedModule } from '../@shared/shared.module';\nimport { LocationModule } from '../@shared/components/location/location.module';\n\n@NgModule({\n  imports: [SharedModule, SelectLocationPageRoutingModule, LocationModule],\n  declarations: [SelectLocationPage],\n})\nexport class SelectLocationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbGVjdC1sb2NhdGlvbi9zZWxlY3QtbG9jYXRpb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { BasePage } from '../base/base.page';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { UtilsService } from '../@core/utils.service';\nimport { PreferencesState } from '../@store/preferences/preferences.state';\nimport { Observable, Subscription } from 'rxjs';\nimport { Coordinates } from '@ionic-native/geolocation';\nimport { NativeGeocoderResult } from '@ionic-native/native-geocoder/ngx';\nimport { FormGroup } from '@angular/forms';\nimport { IElement } from '../@store/global-info/global-info.model';\nimport { Diagnostic } from '@ionic-native/diagnostic/ngx';\nimport { Platform } from '@ionic/angular';\nimport { GetUserCoordinates, GetUserGeolocation } from '../@store/preferences/preferences.actions';\nimport { SetUserInfo } from '../@store/user/user.actions';\nimport { take } from 'rxjs/operators';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-select-location',\n  templateUrl: './select-location.page.html',\n  styleUrls: ['./select-location.page.scss'],\n})\nexport class SelectLocationPage extends BasePage implements OnInit, OnDestroy {\n  @Select(PreferencesState.getCoordinates) coordinates$: Observable<Coordinates>;\n  @Select(PreferencesState.getGeolocation) geolocation$: Observable<NativeGeocoderResult>;\n\n  private locationSubscription$: Subscription;\n  private geocodeSubscription$: Subscription;\n\n  public formGroup: FormGroup;\n  public countryList: IElement[];\n  public geocodeResult: NativeGeocoderResult;\n  private coordinates: Coordinates;\n  public allowedLocationDetection = false;\n\n  constructor(\n    location: Location,\n    router: Router,\n    store: Store,\n    utilsService: UtilsService,\n    private diagnostic: Diagnostic,\n    private platform: Platform\n  ) {\n    super(location, router, store, utilsService);\n  }\n\n  ngOnInit() {}\n\n  async ionViewDidEnter() {\n    if (this.platform.is('cordova') && environment.locationGPSActive) {\n      await this.searchDeviceUserLocation();\n    }\n  }\n\n  public async saveLocation($event) {\n    const location = {\n      country: $event.country?.id,\n      region: $event.region?.id,\n      province: $event.province?.id,\n      city: $event.city,\n      region_name: $event.region_name,\n    };\n\n    this.store\n      .dispatch(new SetUserInfo({ userInfo: location }))\n      .pipe(take(1))\n      .subscribe(\n        () => {\n          this.goBack();\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n\n  private async searchDeviceUserLocation() {\n    try {\n      const isLocationEnabled = await this.diagnostic.isLocationEnabled();\n\n      if (!isLocationEnabled) {\n        await this.utilsService.showActiveLocationAlert();\n        this.subscribeToLocationStateChanges();\n      } else {\n        this.getUserPosition();\n      }\n    } catch (error) {\n      console.error('searchDeviceUserLocation ' + error.message);\n    }\n  }\n\n  private subscribeToLocationStateChanges() {\n    this.diagnostic.registerLocationStateChangeHandler((state) => {\n      if (\n        (this.platform.is('android') && state !== this.diagnostic.locationMode.LOCATION_OFF) ||\n        (this.platform.is('ios') &&\n          (state === this.diagnostic.permissionStatus.GRANTED ||\n            state === this.diagnostic.permissionStatus.GRANTED_WHEN_IN_USE))\n      ) {\n        this.getUserPosition();\n\n        // deregister, so it is only done once\n        this.diagnostic.registerLocationStateChangeHandler(null);\n      }\n    });\n  }\n\n  private getUserPosition() {\n    this.store.dispatch(new GetUserCoordinates());\n    this.locationSubscription$ = this.coordinates$.subscribe((coordinates: Coordinates) => {\n      if (coordinates) {\n        this.allowedLocationDetection = true;\n        this.coordinates = coordinates;\n        this.store.dispatch(\n          new GetUserGeolocation({\n            latitude: this.coordinates.latitude,\n            longitude: this.coordinates.longitude,\n          })\n        );\n      }\n    });\n    this.geocodeSubscription$ = this.geolocation$.subscribe((data: NativeGeocoderResult) => {\n      if (data) {\n        this.geocodeResult = data;\n      }\n    });\n  }\n\n  private disconnectObservers(): void {\n    if (this.locationSubscription$) {\n      this.locationSubscription$.unsubscribe();\n    }\n    if (this.geocodeSubscription$) {\n      this.geocodeSubscription$.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.disconnectObservers();\n  }\n}\n"],"sourceRoot":"webpack:///"}