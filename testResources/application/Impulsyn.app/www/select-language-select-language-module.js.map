{"version":3,"sources":["./src/app/select-language/select-language.page.html","./src/app/select-language/select-language-routing.module.ts","./src/app/select-language/select-language.module.ts","./src/app/select-language/select-language.page.scss","./src/app/select-language/select-language.page.ts"],"names":[],"mappings":"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","file":"select-language-select-language-module.js","sourcesContent":["export default \"<app-header [showBackButton]=\\\"showBackButton\\\" [title]=\\\"'settings.language'\\\" (backButtonClick)=\\\"goBack()\\\"></app-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div class=\\\"flex-container\\\">\\n    <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\n      <ion-row class=\\\"flex-item\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n          <div class=\\\"screen-big-title\\\" color=\\\"secondary\\\">{{ 'settings.selectLanguage' | translate }}</div>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-list class=\\\"ion-padding-vertical ion-margin-vertical\\\">\\n        <ion-radio-group [formControlName]=\\\"'language'\\\">\\n          <ion-item *ngFor=\\\"let language of languageList\\\" class=\\\"ion-no-border\\\">\\n            <ion-label>{{ 'language.' + language | translate }}</ion-label>\\n            <ion-radio slot=\\\"start\\\" [value]=\\\"language\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n      <app-action-button (actionButtonClick)=\\\"changeLanguage()\\\" [buttonText]=\\\"'buttons.save'\\\"></app-action-button>\\n    </form>\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SelectLanguagePage } from './select-language.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SelectLanguagePage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SelectLanguagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SelectLanguagePageRoutingModule } from './select-language-routing.module';\n\nimport { SelectLanguagePage } from './select-language.page';\nimport { SharedModule } from '../@shared/shared.module';\n\n@NgModule({\n  imports: [SharedModule, SelectLanguagePageRoutingModule],\n  declarations: [SelectLanguagePage],\n})\nexport class SelectLanguagePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbGVjdC1sYW5ndWFnZS9zZWxlY3QtbGFuZ3VhZ2UucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { BasePage } from '../base/base.page';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { UtilsService } from '../@core/utils.service';\nimport { Location } from '@angular/common';\nimport { environment } from '@env/environment';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { StorageService } from '../@core/storage.service';\nimport { SetUserInfo } from '../@store/user/user.actions';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-select-language',\n  templateUrl: './select-language.page.html',\n  styleUrls: ['./select-language.page.scss'],\n})\nexport class SelectLanguagePage extends BasePage implements OnInit {\n  public languageList = environment.supportedLanguages;\n  public formGroup: FormGroup;\n\n  constructor(\n    location: Location,\n    router: Router,\n    store: Store,\n    utilsService: UtilsService,\n    private formBuilder: FormBuilder,\n    private translate: TranslateService,\n    private storage: StorageService\n  ) {\n    super(location, router, store, utilsService);\n  }\n\n  async ngOnInit() {\n    await this.initForm();\n  }\n\n  private async initForm(): Promise<void> {\n    const currentLang =\n      this.translate.currentLang || (await this.storage.getLanguage()) || this.translate.getBrowserLang();\n\n    this.formGroup = this.formBuilder.group({\n      language: [currentLang, Validators.required],\n    });\n  }\n\n  public async changeLanguage(): Promise<void> {\n    const language = this.formGroup.get('language').value;\n    await this.utilsService.setLanguage(language);\n    this.store\n      .dispatch(new SetUserInfo({ userInfo: { language } }))\n      .pipe(take(1))\n      .subscribe(\n        () => {\n          this.goBack();\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n}\n"],"sourceRoot":"webpack:///"}