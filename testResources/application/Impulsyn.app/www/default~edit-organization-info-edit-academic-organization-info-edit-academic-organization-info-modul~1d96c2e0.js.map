{"version":3,"sources":["./src/app/base/profile-image-editor-base.page.ts","./src/app/edit-organization-info/edit-organization-info-base.page.ts"],"names":[],"mappings":"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","file":"default~edit-organization-info-edit-academic-organization-info-edit-academic-organization-info-modul~1d96c2e0.js","sourcesContent":["import { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { SafeUrl } from '@angular/platform-browser';\nimport { Store } from '@ngxs/store';\nimport { Camera } from '@ionic-native/camera/ngx';\n\nimport { UtilsService } from '../@core/utils.service';\nimport { BasePage } from './base.page';\nimport { Utils } from '../@global/utils';\nimport { InformService } from '../@core/inform.service';\n\nexport class ProfileImageEditorBasePage extends BasePage {\n  public profileImage: SafeUrl;\n  public imageOriginalPath: string;\n\n  constructor(\n    location: Location,\n    router: Router,\n    store: Store,\n    utilsService: UtilsService,\n    protected camera: Camera,\n    protected informService: InformService\n  ) {\n    super(location, router, store, utilsService);\n  }\n\n  protected pickImageGallery = () => {\n    this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n  };\n\n  protected pickImageCamera = () => {\n    this.pickImage(this.camera.PictureSourceType.CAMERA);\n  };\n\n  protected async pickImage(sourceType: number): Promise<void> {\n    try {\n      const imageData = await this.utilsService.getMediaFromCameraPlugin(sourceType, this.camera.MediaType.PICTURE);\n\n      const { path, filename } = Utils.getPathAndFilenameFromUrl(imageData.imageOriginalPath);\n      const file = await this.utilsService.getFileFromSystemPath(path, filename);\n\n      if (!Utils.isImageMediaType(file.type)) {\n        this.informService.showWarning('createPost.wrongImageType');\n        return;\n      }\n\n      this.imageOriginalPath = imageData.imageOriginalPath;\n      this.profileImage = imageData.imageSource;\n    } catch (error) {\n      console.error('[ProfileImageEditorBasePage pickImage] error taking a picture');\n      console.error(error);\n\n      const capturedError = new Error('Error in pickImage: ' + error);\n      capturedError.name = '[ProfileImageEditorBasePage error]';\n    }\n  }\n}\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Store } from '@ngxs/store';\nimport { UtilsService } from '../@core/utils.service';\nimport { Subscription } from 'rxjs';\nimport { ProfilesState } from '../@store/profiles/profiles.state';\nimport { IOrganizationInfo } from '../@shared/interfaces/organization-info';\nimport { FormGroup } from '@angular/forms';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { UpdatePage, UploadPageProfileImage, SetCurrentPageData } from '../@store/pages/pages.actions';\nimport { UpdateOrganizationInput } from '../../API';\nimport { take } from 'rxjs/operators';\nimport { Utils } from '../@global/utils';\nimport { NavigationExtrasService } from '../@core/navigation-extras.service';\nimport { Constants } from '../@global/constants';\nimport { InformService } from '../@core/inform.service';\nimport { PagesState } from '../@store/pages/pages.state';\nimport { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { ProfileImageEditorBasePage } from '../base/profile-image-editor-base.page';\nimport { GetEmployeesSizeInfo } from '../@store/global-info/global-info.actions';\nimport { GlobalInfoState } from '../@store/global-info/global-info.state';\nimport { IElement } from '../@store/global-info/global-info.model';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport abstract class EditOrganizationInfoBasePage extends ProfileImageEditorBasePage implements OnInit, OnDestroy {\n  protected profileId: string;\n\n  private organizationInfo$: Subscription;\n  private organizationData: IOrganizationInfo;\n\n  public formGroup: FormGroup;\n  public descriptionMaxlength: number = Constants.MAX_PUBLICATION_DESCRIPTION_SIZE;\n\n  public hasLocation: boolean;\n  public organizationLocation: string;\n  protected locationData: { country: string; region: string; province: string; city: string; region_name: string };\n\n  public employeesSizeList: IElement[];\n  protected employeesSizeSubscription: Subscription;\n  public customActionSheetEmployeesSizeOptions: any;\n\n  constructor(\n    location: Location,\n    router: Router,\n    store: Store,\n    utilsService: UtilsService,\n    camera: Camera,\n    informService: InformService,\n    protected route: ActivatedRoute,\n    protected navigationExtrasService: NavigationExtrasService,\n    protected translateService: TranslateService\n  ) {\n    super(location, router, store, utilsService, camera, informService);\n  }\n\n  protected abstract initForm(data: IOrganizationInfo): void;\n  protected abstract getOrganizationInput(): UpdateOrganizationInput;\n\n  public ngOnInit() {\n    this.profileId = this.route.snapshot.params['profileId'];\n    this.subscribeToOrganizationInfo();\n    this.loadEmployeesSize();\n\n    const employeesSizeTitle = this.translateService.instant(`formFields.employeesSize`);\n    this.customActionSheetEmployeesSizeOptions = {\n      header: employeesSizeTitle,\n    };\n  }\n\n  public doIonViewWillEnter(): void {\n    this.setLocationData();\n  }\n\n  public async updateOrganization(): Promise<void> {\n    if (!this.utilsService.isValidForm(this.formGroup)) {\n      return;\n    }\n\n    try {\n      const input = this.getOrganizationInput();\n\n      if (this.imageOriginalPath) {\n        await this.uploadImageToBucket();\n\n        input['photo'] = this.store.selectSnapshot(PagesState.getCurrentPageData).photo;\n      }\n\n      await this.updatePage(input);\n\n      this.clearUpdatePageData();\n\n      this.goBack();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  private async updatePage(input: UpdateOrganizationInput): Promise<void> {\n    await this.store\n      .dispatch(new UpdatePage({ id: this.profileId, input }))\n      .pipe(take(1))\n      .toPromise();\n  }\n\n  private clearUpdatePageData(): void {\n    this.store.dispatch(new SetCurrentPageData(null));\n    this.imageOriginalPath = null;\n  }\n\n  private setLocationData(): void {\n    let location: any;\n    if (this.navigationExtrasService.getExtras() && this.navigationExtrasService.getExtras().location) {\n      location = this.navigationExtrasService.getExtras().location;\n    } else {\n      const organizationData = this.store.selectSnapshot(ProfilesState.getOrganizationInfo);\n      location = {\n        country: organizationData.country,\n        region: organizationData.region,\n        city: organizationData.city,\n        province: organizationData.province,\n        region_name: organizationData.region_name,\n      };\n    }\n\n    this.hasLocation = !!location.country;\n\n    if (this.hasLocation) {\n      this.organizationLocation = Utils.generateUserFriendlyLocation(\n        location.country,\n        location.region,\n        location.city,\n        location.province,\n        location.region_name\n      );\n\n      this.locationData = {\n        country: location.country?.id,\n        region: location.region?.id,\n        province: location.province?.id,\n        city: location.city,\n        region_name: location.region_name,\n      };\n    } else {\n      this.locationData = {\n        country: '',\n        region: '',\n        province: '',\n        city: '',\n        region_name: '',\n      };\n    }\n\n    this.navigationExtrasService.setExtras(null);\n  }\n\n  public async selectImageFrom() {\n    const buttons = [\n      { text: 'cameraOptions.gallery', handler: this.pickImageGallery },\n      { text: 'cameraOptions.camera', handler: this.pickImageCamera },\n      { text: 'buttons.cancel' },\n    ];\n\n    await this.utilsService.showActionSheet('cameraOptions.actionSheetTitle', buttons);\n  }\n\n  private subscribeToOrganizationInfo() {\n    this.organizationInfo$ = this.store\n      .select(ProfilesState.getOrganizationInfo)\n      .subscribe((data: IOrganizationInfo) => {\n        this.organizationData = data;\n        this.profileImage = this.organizationData.photo;\n        this.initForm(this.organizationData);\n      });\n  }\n\n  private loadEmployeesSize(): void {\n    this.store.dispatch(new GetEmployeesSizeInfo());\n    this.employeesSizeSubscription = this.store.select(GlobalInfoState.getEmployeesSize).subscribe((data) => {\n      this.employeesSizeList = data;\n    });\n  }\n\n  private async uploadImageToBucket(): Promise<void> {\n    const { path, filename } = Utils.getPathAndFilenameFromUrl(this.imageOriginalPath);\n    const file = await this.utilsService.getFileFromSystemPath(path, filename);\n\n    const filenameToUpload = `${Constants.PRIVATE_FOLDER}/${this.profileId}/${\n      Constants.PROFILE_FOLDER\n    }/${Utils.generateFileUniqueName(file)}`;\n\n    if (!Utils.isMediaValidSize(file)) {\n      this.informService.showWarning('createPost.invalidFileSize');\n      throw new Error('invalidFileSize');\n    }\n\n    await this.store\n      .dispatch(\n        new UploadPageProfileImage({ filename: filenameToUpload, file, type: file.type, pageId: this.profileId })\n      )\n      .toPromise();\n  }\n\n  private disconnectObservers(): void {\n    if (this.organizationInfo$) {\n      this.organizationInfo$.unsubscribe();\n    }\n\n    if (this.employeesSizeSubscription) {\n      this.employeesSizeSubscription.unsubscribe();\n    }\n  }\n\n  public ngOnDestroy() {\n    this.disconnectObservers();\n  }\n}\n"],"sourceRoot":"webpack:///"}