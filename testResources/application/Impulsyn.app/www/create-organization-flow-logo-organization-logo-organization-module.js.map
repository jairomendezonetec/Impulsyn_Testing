{"version":3,"sources":["./src/app/create-organization-flow/logo-organization/logo-organization.page.html","./src/app/base/profile-image-editor-base.page.ts","./src/app/create-organization-flow/logo-organization/logo-organization-routing.module.ts","./src/app/create-organization-flow/logo-organization/logo-organization.module.ts","./src/app/create-organization-flow/logo-organization/logo-organization.page.scss","./src/app/create-organization-flow/logo-organization/logo-organization.page.ts"],"names":[],"mappings":"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","file":"create-organization-flow-logo-organization-logo-organization-module.js","sourcesContent":["export default \"<app-header [showBackButton]=\\\"showBackButton\\\" [titleImage]=\\\"logoPath\\\" (backButtonClick)=\\\"goBack()\\\"></app-header>\\n\\n<ion-content class=\\\"ion-padding background-with-dark-color\\\">\\n  <ion-grid class=\\\"flex-container\\\">\\n    <ion-row class=\\\"flex-item\\\">\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n        <div class=\\\"screen-extrabig-title\\\" [innerHTML]=\\\"'logo-organization.title' | translate\\\"></div>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"flex-item ion-padding-vertical ion-margin-vertical\\\">\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n        <span class=\\\"small-size ion-text-center ion-margin-top\\\">{{ 'logo-organization.text' | translate }}</span><br />\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"flex-item ion-align-items-center w100 ion-justify-content-center ion-padding-top\\\">\\n      <app-image-chooser\\n        (actionButtonClick)=\\\"(!profileImage)?selectImageFrom():showEditOptions()\\\"\\n        [imagePath]=\\\"(!profileImage)? noProfilePhotoPath : profileImage\\\"\\n      ></app-image-chooser>\\n    </ion-row>\\n    <ion-row\\n      class=\\\"flex-container-vertical ion-align-items-center w100 ion-justify-content-center ion-padding-bottom ion-margin-bottom\\\"\\n    >\\n      <h4 color=\\\"white\\\" class=\\\"ion-text-capitalize bold regular-size\\\">{{ organizationData?.complete_name }}</h4>\\n      <span color=\\\"white\\\" *ngIf=\\\"organizationData?.tagline\\\" class=\\\"small-size\\\">{{ organizationData.tagline }}</span>\\n      <span color=\\\"white\\\" *ngIf=\\\"organizationData?.website\\\" class=\\\"italic underline small-size\\\">\\n        {{ organizationData.website }}\\n      </span>\\n    </ion-row>\\n    <app-action-button-link\\n      *ngIf=\\\"!profileImage\\\"\\n      [buttonText]=\\\"'profileImage.addLogo'\\\"\\n      [linkText]=\\\"'skip'\\\"\\n      (actionButtonClick)=\\\"selectImageFrom()\\\"\\n      (actionLinkClick)=\\\"createPageWithoutLogo()\\\"\\n    ></app-action-button-link>\\n    <app-action-button-link\\n      *ngIf=\\\"profileImage\\\"\\n      [buttonText]=\\\"'profileImage.save'\\\"\\n      [linkText]=\\\"'skip'\\\"\\n      (actionButtonClick)=\\\"createPageWithLogo()\\\"\\n      (actionLinkClick)=\\\"createPageWithoutLogo()\\\"\\n    ></app-action-button-link>\\n  </ion-grid>\\n</ion-content>\\n\";","import { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { SafeUrl } from '@angular/platform-browser';\nimport { Store } from '@ngxs/store';\nimport { Camera } from '@ionic-native/camera/ngx';\n\nimport { UtilsService } from '../@core/utils.service';\nimport { BasePage } from './base.page';\nimport { Utils } from '../@global/utils';\nimport { InformService } from '../@core/inform.service';\n\nexport class ProfileImageEditorBasePage extends BasePage {\n  public profileImage: SafeUrl;\n  public imageOriginalPath: string;\n\n  constructor(\n    location: Location,\n    router: Router,\n    store: Store,\n    utilsService: UtilsService,\n    protected camera: Camera,\n    protected informService: InformService\n  ) {\n    super(location, router, store, utilsService);\n  }\n\n  protected pickImageGallery = () => {\n    this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n  };\n\n  protected pickImageCamera = () => {\n    this.pickImage(this.camera.PictureSourceType.CAMERA);\n  };\n\n  protected async pickImage(sourceType: number): Promise<void> {\n    try {\n      const imageData = await this.utilsService.getMediaFromCameraPlugin(sourceType, this.camera.MediaType.PICTURE);\n\n      const { path, filename } = Utils.getPathAndFilenameFromUrl(imageData.imageOriginalPath);\n      const file = await this.utilsService.getFileFromSystemPath(path, filename);\n\n      if (!Utils.isImageMediaType(file.type)) {\n        this.informService.showWarning('createPost.wrongImageType');\n        return;\n      }\n\n      this.imageOriginalPath = imageData.imageOriginalPath;\n      this.profileImage = imageData.imageSource;\n    } catch (error) {\n      console.error('[ProfileImageEditorBasePage pickImage] error taking a picture');\n      console.error(error);\n\n      const capturedError = new Error('Error in pickImage: ' + error);\n      capturedError.name = '[ProfileImageEditorBasePage error]';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LogoOrganizationPage } from './logo-organization.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogoOrganizationPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LogoOrganizationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { LogoOrganizationPageRoutingModule } from './logo-organization-routing.module';\n\nimport { LogoOrganizationPage } from './logo-organization.page';\nimport { SharedModule } from '../../@shared/shared.module';\n\n@NgModule({\n  imports: [SharedModule, LogoOrganizationPageRoutingModule],\n  declarations: [LogoOrganizationPage],\n})\nexport class LogoOrganizationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1vcmdhbml6YXRpb24tZmxvdy9sb2dvLW9yZ2FuaXphdGlvbi9sb2dvLW9yZ2FuaXphdGlvbi5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Store } from '@ngxs/store';\nimport { UtilsService } from '../../@core/utils.service';\nimport { OrganizationBasePage } from '../organization-base.page';\nimport { StorageService } from '../../@core/storage.service';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { ActionSheetController, Platform } from '@ionic/angular';\nimport { Constants } from '../../@global/constants';\nimport { take } from 'rxjs/operators';\nimport {\n  CreatePage,\n  UploadPageProfileImage,\n  UpdatePage,\n  CreateOrganizationFlowData,\n} from '../../@store/pages/pages.actions';\nimport { Utils } from '../../@global/utils';\nimport { InformService } from '../../@core/inform.service';\nimport { PagesState } from 'src/app/@store/pages/pages.state';\nimport { SetCurrentPageData } from '../../@store/pages/pages.actions';\n\nconst PAGE_POSITION = 3;\n\n@Component({\n  selector: 'app-logo-organization',\n  templateUrl: './logo-organization.page.html',\n  styleUrls: ['./logo-organization.page.scss'],\n})\nexport class LogoOrganizationPage extends OrganizationBasePage implements OnInit {\n  public organizationData: CreateOrganizationFlowData;\n  public noProfilePhotoPath = Constants.NO_PROFILE_IMAGE_PATH;\n\n  constructor(\n    router: Router,\n    location: Location,\n    store: Store,\n    utilsService: UtilsService,\n    storage: StorageService,\n    camera: Camera,\n    informService: InformService,\n    public actionSheetController: ActionSheetController,\n    private platform: Platform\n  ) {\n    super(location, router, store, utilsService, camera, informService, storage);\n  }\n\n  ngOnInit() {\n    // recover previous pages organization info\n    this.organizationData = this.store.selectSnapshot(PagesState.getCurrentPageData);\n    console.dir(this.organizationData);\n  }\n\n  public async createPageWithLogo() {\n    try {\n      if (this.platform.is('cordova')) {\n        await this.createPage();\n        await this.uploadImageToBucket();\n        await this.updatePage();\n\n        this.finishCreatePageProcess();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  public async createPageWithoutLogo() {\n    try {\n      await this.createPage();\n\n      this.finishCreatePageProcess();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  private async createPage() {\n    const info = this.utilsService.getOrganizationModel(this.store.selectSnapshot(PagesState.getCurrentPageData));\n    await this.store\n      .dispatch(new CreatePage({ page: info }))\n      .pipe(take(1))\n      .toPromise();\n  }\n\n  private async updatePage() {\n    const pageId = this.store.selectSnapshot(PagesState.getCurrentPageData).id;\n    const pagePhoto = this.store.selectSnapshot(PagesState.getCurrentPageData).photo;\n    await this.store\n      .dispatch(new UpdatePage({ id: pageId, input: { photo: pagePhoto } }))\n      .pipe(take(1))\n      .toPromise();\n  }\n\n  private clearUpdatePageData(): void {\n    this.store.dispatch(new SetCurrentPageData(null));\n    this.imageOriginalPath = null;\n  }\n\n  private finishCreatePageProcess(): void {\n    const createdPageId = this.store.selectSnapshot(PagesState.getCurrentPageData).id;\n    this.clearUpdatePageData();\n    this.goNextFlowPage(PAGE_POSITION, null, createdPageId);\n  }\n\n  private removePhoto = () => {\n    this.profileImage = null;\n  };\n\n  async selectImageFrom() {\n    const buttons = [\n      { text: 'cameraOptions.gallery', handler: this.pickImageGallery },\n      { text: 'cameraOptions.camera', handler: this.pickImageCamera },\n      { text: 'buttons.cancel' },\n    ];\n\n    await this.utilsService.showActionSheet('cameraOptions.actionSheetTitle', buttons);\n  }\n\n  public async showEditOptions() {\n    const buttons = [\n      { text: 'cameraOptions.choosePhoto', handler: this.pickImageGallery },\n      { text: 'cameraOptions.camera', handler: this.pickImageCamera },\n      { text: 'cameraOptions.deletePhoto', handler: this.removePhoto },\n      { text: 'buttons.cancel' },\n    ];\n\n    await this.utilsService.showActionSheet('cameraOptions.actionSheetEditTitle', buttons);\n  }\n\n  private async uploadImageToBucket(): Promise<void> {\n    const { path, filename } = Utils.getPathAndFilenameFromUrl(this.imageOriginalPath);\n    const file = await this.utilsService.getFileFromSystemPath(path, filename);\n\n    const pageId = this.store.selectSnapshot(PagesState.getCurrentPageData).id;\n    const filenameToUpload = `${Constants.PRIVATE_FOLDER}/${pageId}/${\n      Constants.PROFILE_FOLDER\n    }/${Utils.generateFileUniqueName(file)}`;\n\n    if (!Utils.isMediaValidSize(file)) {\n      this.informService.showWarning('createPost.invalidFileSize');\n      throw new Error('invalidFileSize');\n    }\n\n    await this.store\n      .dispatch(new UploadPageProfileImage({ filename: filenameToUpload, file, type: file.type, pageId }))\n      .toPromise();\n  }\n}\n"],"sourceRoot":"webpack:///"}