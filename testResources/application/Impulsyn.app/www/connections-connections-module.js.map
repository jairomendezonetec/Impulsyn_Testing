{"version":3,"sources":["./src/app/connections/connections.page.html","./src/app/connections/connections-routing.module.ts","./src/app/connections/connections.module.ts","./src/app/connections/connections.page.scss","./src/app/connections/connections.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,6sBAA8oB,E;;;;;;;;;;;;;;;;;;;ACApnB;AACc;AAEF;AAErD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iEAAe;KAC3B;CACF,CAAC;;;IAMyC,CAAC;IAA/B,4BAA4B;QAJxC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,4BAA4B,CAAG;IAAD,mCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAEmC;AAEvB;AACG;AAC+C;AAC/B;;;IAMpC,CAAC;IAAxB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,kEAAY,EAAE,wFAA4B,EAAE,kHAAoB,EAAE,mFAAW,CAAC;YACxF,YAAY,EAAE,CAAC,iEAAe,CAAC;SAChC,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;ACblC;AAAe,6GAA8C,mJAAmJ,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9J;AACI;AAKX;AACsB;AAC3B;AACyB;AACN;AACnB;AACG;AACwB;AACrB;AAKa;AACd;AACW;AAC+C;AACxD;;IAOR,iFAAQ;IAuB3C,yBACE,MAAc,EACd,QAAkB,EAClB,KAAY,EACZ,YAA0B,EAClB,KAAqB,EACrB,iBAA+C;QANzD,YAQE,kBAAM,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,CAAC,SAC7C;QAJS,WAAK,GAAL,KAAK,CAAgB;QACrB,uBAAiB,GAAjB,iBAAiB,CAA8B;QAjBlD,kBAAY,GAAG,IAAI,CAAC;QACpB,iBAAW,GAAG,IAAI,CAAC;QACnB,kBAAY,GAAG,EAAE,CAAC;QAClB,mBAAa,GAAG,KAAK,CAAC;QACtB,YAAM,GAAG,KAAK,CAAC;QACf,WAAK,GAAqB,EAAE,CAAC;QAC7B,uBAAiB,GAAqB,EAAE,CAAC;QACxC,kBAAY,GAAqB,EAAE,CAAC;QACpC,wBAAkB,GAAqB,EAAE,CAAC;QAC3C,WAAK,GAAwB,EAAE,CAAC;QAChC,mBAAa,GAA6B,EAAE,CAAC;;IAUpD,CAAC;IAED,kCAAQ,GAAR,cAAY,CAAC;IAEb,4CAAkB,GAAlB;;QACE,IAAI,CAAC,YAAY,SAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,0CAAE,YAAY,CAAC;QAClE,IAAI,CAAC,WAAW,SAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,0CAAE,EAAE,CAAC;QACvD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,gEAAS,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,GAAG,WAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,0CAAE,IAAI,KAAI,KAAK,CAAC;QAEpE,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QAED,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,uFAAwB,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,oFAAqB,EAAE,CAAC,CAAC;IACnD,CAAC;IAEO,0CAAgB,GAAxB;QAAA,iBAeC;QAdC,IAAI,CAAC,KAAK;aACP,QAAQ,CAAC,IAAI,mFAAoB,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;aAC7D,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC;YACT,IAAM,kBAAkB,GAAG,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,yEAAY,CAAC,WAAW,CAAC,CAAC;YAC/E,KAAI,CAAC,KAAK;iBACP,QAAQ,CAAC,IAAI,mFAAoB,CAAC,EAAE,EAAE,EAAE,KAAI,CAAC,WAAW,EAAE,CAAC,CAAC;iBAC5D,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC;gBACT,IAAM,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,yEAAY,CAAC,WAAW,CAAC,CAAC;gBACzE,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;gBACjF,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,iDAAuB,GAA/B;QAAA,iBAeC;QAdC,IAAI,CAAC,KAAK;aACP,QAAQ,CAAC,IAAI,mFAAoB,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;aAC7D,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC;YACT,IAAM,kBAAkB,GAAG,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,yEAAY,CAAC,WAAW,CAAC,CAAC;YAC/E,KAAI,CAAC,KAAK;iBACP,QAAQ,CAAC,IAAI,2EAAgB,CAAC,EAAE,EAAE,EAAE,KAAI,CAAC,WAAW,EAAE,CAAC,CAAC;iBACxD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC;gBACT,IAAM,aAAa,GAAG,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,mEAAU,CAAC,gBAAgB,CAAC,CAAC;gBAC7E,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;gBAClF,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,8CAAoB,GAA5B;QAAA,iBAIC;QAHC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,IAAI;YAC9D,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,4CAAkB,GAA1B;QAAA,iBAIC;QAHC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,IAAI;YAC/D,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,mCAAS,GAAhB,UAAiB,EAAU;QACzB,OAAO,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC;IAClC,CAAC;IAEO,0CAAgB,GAAxB,UAAyB,WAAW,EAAE,WAAW;QAC/C,OAAO,qDAAM,CAAC,WAAW,EAAE,UAAC,IAAI,IAAK,0DAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAlC,CAAkC,CAAC,CAAC;IAC3E,CAAC;IAEM,yCAAe,GAAtB,UAAuB,EAAU;QAC/B,OAAO,mDAAK,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;IAEO,0CAAgB,GAAxB,UAAyB,EAAU;QACjC,OAAO,mDAAK,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IACnD,CAAC;IAEO,gDAAsB,GAA9B,UAA+B,EAAU;QACvC,OAAO,mDAAK,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;IACzD,CAAC;IAEM,uCAAa,GAApB,UAAqB,EAAU;QAC7B,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,EAAE;YACtF,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;IAC1D,CAAC;IAEM,qCAAW,GAAlB,UAAmB,EAAU;QAC3B,IAAI,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE;YACnC,OAAO,WAAW,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,EAAE;YACpC,OAAO,SAAS,CAAC;SAClB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,6CAAmB,GAA1B,UAA2B,MAAM;QAC/B,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACxD,CAAC;IAEO,8CAAoB,GAA5B;QAAA,iBAOC;QANC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,IAAI;YACjE,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO;aACR;YACD,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,4CAAkB,GAA1B;QAAA,iBAOC;QANC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,UAAC,IAAI;YACnE,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO;aACR;YACD,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,qCAAW,GAAlB,UAAmB,MAAM;QACvB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,4EAAc,CAAC,IAAI,CAAC,CAAC;IACpE,CAAC;IAEM,4CAAkB,GAAzB,UAA0B,MAAM;QAC9B,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;IAC7E,CAAC;IAED,0CAAgB,GAAhB;QACE,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEO,6CAAmB,GAA3B;QACE,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;SAC1C;QACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACvC;QACD,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;SAC3C;QACD,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;SAC3C;QACD,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SACzC;IACH,CAAC;;gBA1MsB,uDAAM;gBACtB,yDAAQ;gBANA,kDAAK;gBAOb,iEAAY;gBAFZ,+DAAc;gBAGd,iHAA4B;;IASD;QAAjC,2DAAM,CAAC,yEAAY,CAAC,WAAW,CAAC;8DAAiD;IAC1C;QAAvC,2DAAM,CAAC,mEAAU,CAAC,mBAAmB,CAAC;2DAAiD;IACnD;QAApC,2DAAM,CAAC,mEAAU,CAAC,gBAAgB,CAAC;+DAAkD;IACnD;QAAlC,2DAAM,CAAC,yEAAY,CAAC,YAAY,CAAC;0DAA6C;IAC9C;QAAhC,2DAAM,CAAC,yEAAY,CAAC,UAAU,CAAC;6DAAgD;IALrE,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,mOAAsC;;SAEvC,CAAC;OACW,eAAe,CAgM3B;IAAD,sBAAC;CAAA,CAhMoC,yDAAQ,GAgM5C;AAhM2B","file":"connections-connections-module.js","sourcesContent":["export default \"<app-header [title]=\\\"completeName\\\" [showBackButton]=\\\"true\\\" (backButtonClick)=\\\"goBack()\\\"></app-header>\\n\\n<ion-content>\\n  <div *ngFor=\\\"let item of items\\\">\\n    <app-item-suggestion\\n      *ngIf=\\\"loaded\\\"\\n      [info]=\\\"item\\\"\\n      [buttonText]=\\\"getButtonText(item.id)\\\"\\n      [infoText]=\\\"getInfoText(item.id)\\\"\\n      (actionButtonClick)=\\\"isCommonContact(item.id) ? onSendMessageClick($event) : onRequestConnection($event)\\\"\\n      (actionItemClick)=\\\"onItemClick($event)\\\"\\n      [buttonColor]=\\\"!isCommonContact(item.id) ? 'secondary' : null\\\"\\n      [isOrganization]=\\\"false\\\"\\n    ></app-item-suggestion>\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConnectionsPage } from './connections.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConnectionsPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConnectionsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { ConnectionsPageRoutingModule } from './connections-routing.module';\n\nimport { ConnectionsPage } from './connections.page';\nimport { SharedModule } from '../@shared/shared.module';\nimport { ItemSuggestionModule } from '../networking/components/item-suggestion/item-suggestion.module';\nimport { EmptyModule } from '../profiles/components/empty/empty.module';\n\n@NgModule({\n  imports: [SharedModule, ConnectionsPageRoutingModule, ItemSuggestionModule, EmptyModule],\n  declarations: [ConnectionsPage],\n})\nexport class ConnectionsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nvbm5lY3Rpb25zL2Nvbm5lY3Rpb25zLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthState } from '../@store/auth/auth.state';\nimport {\n  GetConnectionsAction,\n  GetPendingRequestsAction,\n  GetRequestsSentAction,\n} from '../@store/network/network.actions';\nimport { GetPageFollowers } from '../@store/pages/pages.actions';\nimport { take } from 'rxjs/operators';\nimport { NetworkState } from '../@store/network/network.state';\nimport { PagesState } from '../@store/pages/pages.state';\nimport { filter, find } from 'lodash';\nimport { Utils } from '../@global/utils';\nimport { PUBLISHER_TYPE } from '../@shared/enums/publisher-type';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { UserPublicInfo } from '../networking/models/user-public-info.model';\nimport { IOrganizationInfo } from '../@shared/interfaces/organization-info';\nimport { ConnectionRequestModel } from '../networking/models/connection-request.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { UtilsService } from '../@core/utils.service';\nimport { NetworkingControllersService } from '../networking/services/networking-controllers.service';\nimport { BasePage } from '../base/base.page';\n\n@Component({\n  selector: 'app-connections',\n  templateUrl: './connections.page.html',\n  styleUrls: ['./connections.page.scss'],\n})\nexport class ConnectionsPage extends BasePage implements OnInit {\n  @Select(NetworkState.getContacts) userContactsList$: Observable<UserPublicInfo[]>;\n  @Select(PagesState.getFollowedPageList) userPagesList$: Observable<IOrganizationInfo[]>;\n  @Select(PagesState.getPageFollowers) pageFollowersList$: Observable<UserPublicInfo[]>;\n  @Select(NetworkState.getRequested) userSentList$: Observable<UserPublicInfo[]>;\n  @Select(NetworkState.getPending) userPendingList$: Observable<UserPublicInfo[]>;\n\n  private subscriptionContacts$: Subscription;\n  private subscriptionPages$: Subscription;\n  private subscriptionFollowers$: Subscription;\n  private subscriptionRequested$: Subscription;\n  private subscriptionPending$: Subscription;\n  public completeName = null;\n  public otherUserId = null;\n  public userLoggedId = '';\n  public pageFollowers = false;\n  public loaded = false;\n  public items: UserPublicInfo[] = [];\n  public itemsIntersection: UserPublicInfo[] = [];\n  private pendingItems: UserPublicInfo[] = [];\n  private sendedPendingItems: UserPublicInfo[] = [];\n  public pages: IOrganizationInfo[] = [];\n  public itemsRequests: ConnectionRequestModel[] = [];\n  constructor(\n    router: Router,\n    location: Location,\n    store: Store,\n    utilsService: UtilsService,\n    private route: ActivatedRoute,\n    private networkingService: NetworkingControllersService\n  ) {\n    super(location, router, store, utilsService);\n  }\n\n  ngOnInit() {}\n\n  doIonViewWillEnter() {\n    this.completeName = this.route.snapshot.queryParams?.completeName;\n    this.otherUserId = this.route.snapshot.queryParams?.id;\n    this.userLoggedId = this.store.selectSnapshot(AuthState.getUserId);\n    this.pageFollowers = this.route.snapshot.queryParams?.page || false;\n\n    if (this.pageFollowers) {\n      this.subscribeFollowers();\n      this.getFollowersConnections();\n    } else {\n      this.subscribeConnections();\n      this.getCommonFriends();\n    }\n\n    this.subscribeToRequested();\n    this.subscribeToPending();\n\n    this.store.dispatch(new GetPendingRequestsAction());\n    this.store.dispatch(new GetRequestsSentAction());\n  }\n\n  private getCommonFriends() {\n    this.store\n      .dispatch(new GetConnectionsAction({ id: this.userLoggedId }))\n      .pipe(take(1))\n      .subscribe(() => {\n        const userLoggedContacts = this.store.selectSnapshot(NetworkState.getContacts);\n        this.store\n          .dispatch(new GetConnectionsAction({ id: this.otherUserId }))\n          .pipe(take(1))\n          .subscribe(() => {\n            const userContacts = this.store.selectSnapshot(NetworkState.getContacts);\n            this.itemsIntersection = this.unionCollections(userContacts, userLoggedContacts);\n            this.loaded = true;\n          });\n      });\n  }\n\n  private getFollowersConnections() {\n    this.store\n      .dispatch(new GetConnectionsAction({ id: this.userLoggedId }))\n      .pipe(take(1))\n      .subscribe(() => {\n        const userLoggedContacts = this.store.selectSnapshot(NetworkState.getContacts);\n        this.store\n          .dispatch(new GetPageFollowers({ id: this.otherUserId }))\n          .pipe(take(1))\n          .subscribe(() => {\n            const pageFollowers = this.store.selectSnapshot(PagesState.getPageFollowers);\n            this.itemsIntersection = this.unionCollections(pageFollowers, userLoggedContacts);\n            this.loaded = true;\n          });\n      });\n  }\n\n  private subscribeToRequested(): void {\n    this.subscriptionRequested$ = this.userSentList$.subscribe((data) => {\n      this.sendedPendingItems = data;\n    });\n  }\n\n  private subscribeToPending(): void {\n    this.subscriptionPending$ = this.userPendingList$.subscribe((data) => {\n      this.pendingItems = data;\n    });\n  }\n\n  public isOwnUser(id: string) {\n    return id === this.userLoggedId;\n  }\n\n  private unionCollections(collection1, collection2) {\n    return filter(collection1, (item) => find(collection2, ['id', item.id]));\n  }\n\n  public isCommonContact(id: string): boolean {\n    return Utils.isItemOnList(this.itemsIntersection, id);\n  }\n\n  private isPendingRequest(id: string) {\n    return Utils.isItemOnList(this.pendingItems, id);\n  }\n\n  private isSendedPendingRequest(id: string) {\n    return Utils.isItemOnList(this.sendedPendingItems, id);\n  }\n\n  public getButtonText(id: string): string {\n    if (this.isOwnUser(id) || this.isSendedPendingRequest(id) || this.isPendingRequest(id)) {\n      return null;\n    }\n\n    return this.isCommonContact(id) ? 'message' : 'connect';\n  }\n\n  public getInfoText(id: string): string {\n    if (this.isSendedPendingRequest(id)) {\n      return 'requested';\n    } else if (this.isPendingRequest(id)) {\n      return 'pending';\n    }\n\n    return null;\n  }\n\n  public onRequestConnection($event) {\n    this.networkingService.onRequestConnection($event.id);\n  }\n\n  private subscribeConnections(): void {\n    this.subscriptionContacts$ = this.userContactsList$.subscribe((data) => {\n      if (!data) {\n        return;\n      }\n      this.items = data;\n    });\n  }\n\n  private subscribeFollowers(): void {\n    this.subscriptionFollowers$ = this.pageFollowersList$.subscribe((data) => {\n      if (!data) {\n        return;\n      }\n      this.items = data;\n    });\n  }\n\n  public onItemClick($event) {\n    this.utilsService.goProfile($event.model.id, PUBLISHER_TYPE.USER);\n  }\n\n  public onSendMessageClick($event) {\n    this.utilsService.goChatDetailWithUserData($event.id, $event.completeName);\n  }\n\n  ionViewWillLeave() {\n    this.disconnectObservers();\n  }\n\n  private disconnectObservers(): void {\n    if (this.subscriptionContacts$) {\n      this.subscriptionContacts$.unsubscribe();\n    }\n    if (this.subscriptionPages$) {\n      this.subscriptionPages$.unsubscribe();\n    }\n    if (this.subscriptionFollowers$) {\n      this.subscriptionFollowers$.unsubscribe();\n    }\n    if (this.subscriptionRequested$) {\n      this.subscriptionRequested$.unsubscribe();\n    }\n    if (this.subscriptionPending$) {\n      this.subscriptionPending$.unsubscribe();\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}