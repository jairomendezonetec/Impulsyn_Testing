{"version":3,"sources":["./src/app/profiles/user/add-item/add-item.page.html","./src/app/profiles/user/add-item/components/form-academic/form-academic.component.html","./src/app/profiles/user/add-item/components/form-experience/form-experience.component.html","./src/app/profiles/user/add-item/components/form-skill/form-skill.component.html","./src/app/profiles/user/add-item/add-item-routing.module.ts","./src/app/profiles/user/add-item/add-item.module.ts","./src/app/profiles/user/add-item/add-item.page.scss","./src/app/profiles/user/add-item/add-item.page.ts","./src/app/profiles/user/add-item/components/form-academic/form-academic.component.scss","./src/app/profiles/user/add-item/components/form-academic/form-academic.component.ts","./src/app/profiles/user/add-item/components/form-academic/form-academic.module.ts","./src/app/profiles/user/add-item/components/form-experience/form-experience.component.scss","./src/app/profiles/user/add-item/components/form-experience/form-experience.component.ts","./src/app/profiles/user/add-item/components/form-experience/form-experience.module.ts","./src/app/profiles/user/add-item/components/form-skill/form-skill.component.scss","./src/app/profiles/user/add-item/components/form-skill/form-skill.component.ts","./src/app/profiles/user/add-item/components/form-skill/form-skill.module.ts"],"names":[],"mappings":"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","file":"profiles-user-add-item-add-item-module.js","sourcesContent":["export default \"<app-header\\n  [showBackButton]=\\\"true\\\"\\n  [title]=\\\"title\\\"\\n  (backButtonClick)=\\\"goBack()\\\"\\n  [actionIconList]=\\\"[headerIcon]\\\"\\n  (actionIconListClick)=\\\"onHeaderIconClick()\\\"\\n></app-header>\\n<ion-content class=\\\"ion-padding\\\">\\n  <div [ngSwitch]=\\\"itemTypeSelected\\\">\\n    <app-form-experience\\n      *ngSwitchCase=\\\"1\\\"\\n      [experienceId]=\\\"id\\\"\\n      (sendFormAdd)=\\\"saveExperience($event)\\\"\\n      (sendFormUpdate)=\\\"updateExperience($event)\\\"\\n    ></app-form-experience>\\n    <app-form-academic\\n      *ngSwitchCase=\\\"2\\\"\\n      [academicId]=\\\"id\\\"\\n      (sendFormUpdate)=\\\"updateAcademic($event)\\\"\\n      (sendFormAdd)=\\\"saveAcademic($event)\\\"\\n    ></app-form-academic>\\n    <app-form-skill *ngSwitchCase=\\\"3\\\" (sendForm)=\\\"saveSkill($event)\\\"></app-form-skill>\\n  </div>\\n</ion-content>\\n\";","export default \"<ion-grid class=\\\"flex-container\\\">\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.academicTitle' | translate }}</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            inputmode=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            [formControlName]=\\\"'title'\\\"\\n            [maxlength]=\\\"maxLengthTitle\\\"\\n            [(ngModel)]=\\\"modelAcademicInput.title\\\"\\n            required\\n          ></ion-input>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['title']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.academicOrganization' | translate }}</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            inputmode=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            [formControlName]=\\\"'organization'\\\"\\n            [maxlength]=\\\"maxLengthTitle\\\"\\n            [(ngModel)]=\\\"modelAcademicInput.organization\\\"\\n            required\\n          ></ion-input>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['organization']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.location' | translate }}</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            inputmode=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            [formControlName]=\\\"'location'\\\"\\n            [(ngModel)]=\\\"modelAcademicInput.location\\\"\\n            placeholder=\\\"{{ 'formFields.placeholderLocation' | translate }}\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['location']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.studyArea' | translate }}</ion-label>\\n          <ion-select\\n            *ngIf=\\\"studyAreaList\\\"\\n            interface=\\\"action-sheet\\\"\\n            formControlName=\\\"study_area\\\"\\n            class=\\\"custom-alert\\\"\\n            [(ngModel)]=\\\"modelAcademicInput.study_area\\\"\\n            okText=\\\"{{ 'buttons.accept' | translate }}\\\"\\n            cancelText=\\\"{{ 'buttons.cancel' | translate }}\\\"\\n            [interfaceOptions]=\\\"customActionSheetStudyAreaOptions\\\"\\n          >\\n            <ion-select-option *ngFor=\\\"let item of studyAreaList\\\" [value]=\\\"item.id\\\">\\n              {{ 'studyArea.' + item.name | translate }}</ion-select-option\\n            >\\n          </ion-select>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['study_area']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6 ion-text-center flex-compatible ion-align-items-center\\\">\\n        <div class=\\\"pr col-xs-6 col-sm-6 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{ 'formFields.startDate' | translate }}</ion-label>\\n            <ion-datetime\\n              [min]=\\\"getMinDate()\\\"\\n              [max]=\\\"getMaxDate()\\\"\\n              [displayFormat]=\\\"getDateDisplayFormat()\\\"\\n              [pickerFormat]=\\\"getDatePickerFormat()\\\"\\n              [doneText]=\\\"'buttons.accept' | translate\\\"\\n              [cancelText]=\\\"'buttons.cancel' | translate\\\"\\n              [formControlName]=\\\"'start_date'\\\"\\n              [(ngModel)]=\\\"modelAcademicInput.start_date\\\"\\n            ></ion-datetime>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['start_date']\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"pr col-xs-6 col-sm-6 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{ 'formFields.endDate' | translate }}</ion-label>\\n            <ion-datetime\\n              [min]=\\\"getStart()\\\"\\n              [max]=\\\"getMaxDate()\\\"\\n              [displayFormat]=\\\"getDateDisplayFormat()\\\"\\n              [pickerFormat]=\\\"getDatePickerFormat()\\\"\\n              [doneText]=\\\"'buttons.accept' | translate\\\"\\n              [cancelText]=\\\"'buttons.cancel' | translate\\\"\\n              [formControlName]=\\\"'end_date'\\\"\\n              [(ngModel)]=\\\"modelAcademicInput.end_date\\\"\\n              [disabled]=\\\"formGroup.controls['start_date'].value === ''\\\"\\n            ></ion-datetime>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['end_date']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin ion-no-border\\\">\\n          <ion-label class=\\\"regular-size\\\">{{ 'formFields.currentAcademic' | translate }}</ion-label>\\n          <ion-toggle\\n            slot=\\\"start\\\"\\n            name=\\\"all\\\"\\n            color=\\\"secondary\\\"\\n            [formControlName]=\\\"'currentExperience'\\\"\\n            (ionChange)=\\\"setEndDate()\\\"\\n          ></ion-toggle>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['currentExperience']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.description' | translate }}</ion-label>\\n          <ion-textarea\\n            type=\\\"text\\\"\\n            inputmode=\\\"text\\\"\\n            rows=\\\"8\\\"\\n            [maxlength]=\\\"maxlength\\\"\\n            [(ngModel)]=\\\"modelAcademicInput.description\\\"\\n            [formControlName]=\\\"'description'\\\"\\n          ></ion-textarea>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['description']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <app-action-button\\n      class=\\\"ion-margin-top ion-margin-vertical\\\"\\n      (actionButtonClick)=\\\"saveAcademicProfile()\\\"\\n      [buttonText]=\\\"'buttons.save'\\\"\\n    ></app-action-button>\\n  </form>\\n</ion-grid>\\n\";","export default \"<ion-grid class=\\\"flex-container\\\">\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.experienceTitle' | translate }}</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            inputmode=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            [formControlName]=\\\"'title'\\\"\\n            [(ngModel)]=\\\"modelExperienceInput.title\\\"\\n            [maxlength]=\\\"maxLengthTitle\\\"\\n            required\\n            placeholder=\\\"{{ 'formFields.placeholderTitle' | translate }}\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['title']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.organization' | translate }}</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            inputmode=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            [formControlName]=\\\"'organization'\\\"\\n            [maxlength]=\\\"maxLengthTitle\\\"\\n            [(ngModel)]=\\\"modelExperienceInput.organization\\\"\\n            placeholder=\\\"{{ 'formFields.placeholderOganization' | translate }}\\\"\\n            required\\n          ></ion-input>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['organization']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.location' | translate }}</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            inputmode=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            [formControlName]=\\\"'location'\\\"\\n            placeholder=\\\"{{ 'formFields.placeholderLocation' | translate }}\\\"\\n            [(ngModel)]=\\\"modelExperienceInput.location\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['location']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.workType' | translate }}</ion-label>\\n          <ion-select\\n            *ngIf=\\\"opportunityList && opportunityList.length\\\"\\n            interface=\\\"action-sheet\\\"\\n            formControlName=\\\"work_type\\\"\\n            class=\\\"custom-alert\\\"\\n            okText=\\\"{{ 'buttons.accept' | translate }}\\\"\\n            cancelText=\\\"{{ 'buttons.cancel' | translate }}\\\"\\n            [interfaceOptions]=\\\"customActionSheetOpportunitiesOptions\\\"\\n            [(ngModel)]=\\\"modelExperienceInput.work_type\\\"\\n          >\\n            <ion-select-option *ngFor=\\\"let opportunity of opportunityList\\\" [value]=\\\"opportunity.id\\\">\\n              {{ 'opportunityType.' + opportunity.name | translate }}</ion-select-option\\n            >\\n          </ion-select>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['work_type']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.workArea' | translate }}</ion-label>\\n          <ion-select\\n            *ngIf=\\\"workAreaList && workAreaList.length\\\"\\n            interface=\\\"action-sheet\\\"\\n            formControlName=\\\"work_area\\\"\\n            class=\\\"custom-alert\\\"\\n            okText=\\\"{{ 'buttons.accept' | translate }}\\\"\\n            cancelText=\\\"{{ 'buttons.cancel' | translate }}\\\"\\n            [(ngModel)]=\\\"modelExperienceInput.work_area\\\"\\n            [interfaceOptions]=\\\"customActionSheetWorkAreaOptions\\\"\\n          >\\n            <ion-select-option *ngFor=\\\"let workArea of workAreaList\\\" [value]=\\\"workArea.id\\\">\\n              {{ 'workArea.' + workArea.name | translate }}</ion-select-option\\n            >\\n          </ion-select>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['work_area']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6 ion-text-center flex-compatible ion-align-items-center\\\">\\n        <div class=\\\"pr col-xs-6 col-sm-6 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{ 'formFields.startDate' | translate }}</ion-label>\\n            <ion-datetime\\n              [min]=\\\"getMinDate()\\\"\\n              [max]=\\\"getMaxDate()\\\"\\n              [displayFormat]=\\\"getDateDisplayFormat()\\\"\\n              [pickerFormat]=\\\"getDatePickerFormat()\\\"\\n              [doneText]=\\\"'buttons.accept' | translate\\\"\\n              [cancelText]=\\\"'buttons.cancel' | translate\\\"\\n              [formControlName]=\\\"'start_date'\\\"\\n              [(ngModel)]=\\\"modelExperienceInput.start_date\\\"\\n            ></ion-datetime>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['start_date']\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"pr col-xs-6 col-sm-6 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{ 'formFields.endDate' | translate }}</ion-label>\\n            <ion-datetime\\n              [min]=\\\"getStart()\\\"\\n              [max]=\\\"getMaxDate()\\\"\\n              [displayFormat]=\\\"getDateDisplayFormat()\\\"\\n              [pickerFormat]=\\\"getDatePickerFormat()\\\"\\n              [doneText]=\\\"'buttons.accept' | translate\\\"\\n              [cancelText]=\\\"'buttons.cancel' | translate\\\"\\n              [formControlName]=\\\"'end_date'\\\"\\n              [disabled]=\\\"formGroup.controls['start_date'].value === ''\\\"\\n              [(ngModel)]=\\\"modelExperienceInput.end_date\\\"\\n            ></ion-datetime>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['end_date']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin ion-no-border\\\">\\n          <ion-label class=\\\"regular-size\\\">{{ 'formFields.currentExperience' | translate }}</ion-label>\\n          <ion-toggle\\n            slot=\\\"start\\\"\\n            name=\\\"all\\\"\\n            color=\\\"secondary\\\"\\n            [formControlName]=\\\"'currentExperience'\\\"\\n            (ionChange)=\\\"setEndDate()\\\"\\n          ></ion-toggle>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['currentExperience']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center ion-padding-bottom\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.description' | translate }}</ion-label>\\n          <ion-textarea\\n            type=\\\"text\\\"\\n            inputmode=\\\"text\\\"\\n            rows=\\\"8\\\"\\n            [maxlength]=\\\"maxlength\\\"\\n            [(ngModel)]=\\\"modelExperienceInput.description\\\"\\n            [formControlName]=\\\"'description'\\\"\\n          ></ion-textarea>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['description']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <app-action-button\\n      class=\\\"ion-margin-top ion-margin-vertical\\\"\\n      (actionButtonClick)=\\\"saveExperienceProfile()\\\"\\n      [buttonText]=\\\"'buttons.save'\\\"\\n    ></app-action-button>\\n  </form>\\n</ion-grid>\\n\";","export default \"<ion-grid class=\\\"flex-container\\\">\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <div class=\\\"flex-justify-content-center\\\">\\n      <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n          <ion-label appPlatformMode>{{ 'formFields.skill' | translate }}</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            inputmode=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            [formControlName]=\\\"'title'\\\"\\n            [maxlength]=\\\"maxLength\\\"\\n            required\\n          ></ion-input>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['title']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <div class=\\\"flex-justify-content-center ion-margin-bottom\\\">\\n      <div\\n        color=\\\"grey\\\"\\n        class=\\\"small-size pr col-xs-12 col-sm-8 col-lg-6 ion-text-center ion-justify-content-center ion-align-items-center\\\"\\n      >\\n        {{ 'maxSkills' | translate }}\\n      </div>\\n    </div>\\n    <app-action-button\\n      class=\\\"ion-margin-top ion-margin-vertical\\\"\\n      (actionButtonClick)=\\\"saveSkill()\\\"\\n      [buttonText]=\\\"'buttons.save'\\\"\\n    ></app-action-button>\\n  </form>\\n</ion-grid>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddItemPage } from './add-item.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddItemPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddItemPageRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { AddItemPageRoutingModule } from './add-item-routing.module';\n\nimport { AddItemPage } from './add-item.page';\nimport { SharedModule } from '../../../@shared/shared.module';\nimport { FormExperienceComponentModule } from './components/form-experience/form-experience.module';\nimport { FormSkillModule } from './components/form-skill/form-skill.module';\nimport { FormAcademicModule } from './components/form-academic/form-academic.module';\n\n@NgModule({\n  imports: [SharedModule, AddItemPageRoutingModule, FormExperienceComponentModule, FormSkillModule, FormAcademicModule],\n  declarations: [AddItemPage],\n})\nexport class AddItemPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGVzL3VzZXIvYWRkLWl0ZW0vYWRkLWl0ZW0ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Store } from '@ngxs/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BasePage } from '../../../base/base.page';\nimport { UtilsService } from '../../../@core/utils.service';\nimport {\n  CreateAcademicExperience,\n  CreateProfessionalExperience,\n  CreateSkillExperience,\n  DeleteAcademicExperience,\n  DeleteProfessionalExperience,\n  UpdateAcademicExperience,\n  UpdateProfessionalExperience,\n} from '../../../@store/user/user.actions';\nimport { take } from 'rxjs/operators';\nimport { AlertController } from '@ionic/angular';\nimport { ItemProfileTypes } from '../../types/item-profile-type';\nimport { AcademicExperienceInput, ProfessionalExperienceInput } from '../../../../API';\nimport { IActionIcon } from '../../../@shared/components/header/header.component';\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.page.html',\n  styleUrls: ['./add-item.page.scss'],\n})\nexport class AddItemPage extends BasePage implements OnInit {\n  public title;\n  public itemTypeSelected: number;\n  public id: string;\n  public isUpdated: boolean;\n  public headerIcon: IActionIcon;\n\n  constructor(\n    router: Router,\n    location: Location,\n    store: Store,\n    utilsService: UtilsService,\n    private translateService: TranslateService,\n    public alertController: AlertController\n  ) {\n    super(location, router, store, utilsService);\n  }\n\n  ngOnInit() {\n    if (this.router.getCurrentNavigation().extras.state) {\n      this.itemTypeSelected = this.router.getCurrentNavigation().extras.state.itemType;\n      this.id = this.router.getCurrentNavigation().extras.state.id;\n      this.isUpdated = this.id !== undefined;\n    }\n    if (this.isUpdated) {\n      this.title = this.translateService.instant(`userProfile.updateExperience${this.itemTypeSelected}`);\n      this.headerIcon = { name: 'trash' };\n    } else {\n      this.title = this.translateService.instant(`userProfile.addExperience${this.itemTypeSelected}`);\n    }\n  }\n\n  public async onHeaderIconClick() {\n    const title = this.translateService.instant(`userProfile.deleteTitle${this.itemTypeSelected}`);\n    const message = this.translateService.instant(`userProfile.deleteMessage2`);\n    const cancelButton = this.translateService.instant(`no`);\n    const acceptButton = this.translateService.instant(`yes`);\n    const alert = await this.alertController.create({\n      cssClass: 'custom-alert',\n      header: title,\n      message,\n      buttons: [\n        {\n          text: cancelButton,\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            // do nothing\n          },\n        },\n        {\n          text: acceptButton,\n          handler: () => {\n            if (this.itemTypeSelected === ItemProfileTypes.Experience) {\n              this.deleteExperience();\n            } else {\n              this.deleteAcademic();\n            }\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  deleteExperience() {\n    this.store\n      .dispatch(new DeleteProfessionalExperience({ id: this.id }))\n      .pipe(take(1))\n      .subscribe(\n        () => {\n          this.goBack();\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n\n  updateExperience($event: ProfessionalExperienceInput) {\n    this.store\n      .dispatch(new UpdateProfessionalExperience({ id: this.id, input: $event }))\n      .pipe(take(1))\n      .subscribe(\n        () => {\n          this.goBack();\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n\n  updateAcademic($event: AcademicExperienceInput) {\n    this.store\n      .dispatch(new UpdateAcademicExperience({ id: this.id, input: $event }))\n      .pipe(take(1))\n      .subscribe(\n        () => {\n          this.goBack();\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n\n  deleteAcademic() {\n    this.store\n      .dispatch(new DeleteAcademicExperience({ id: this.id }))\n      .pipe(take(1))\n      .subscribe(\n        () => {\n          this.goBack();\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n\n  saveSkill($event) {\n    this.store\n      .dispatch(new CreateSkillExperience({ input: { title: $event } }))\n      .pipe(take(1))\n      .subscribe(\n        () => {\n          this.goBack();\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n\n  saveExperience($event) {\n    console.dir($event);\n    this.store\n      .dispatch(new CreateProfessionalExperience({ input: $event }))\n      .pipe(take(1))\n      .subscribe(\n        () => {\n          this.goBack();\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n\n  saveAcademic($event) {\n    console.dir($event);\n    this.store\n      .dispatch(new CreateAcademicExperience({ input: $event }))\n      .pipe(take(1))\n      .subscribe(\n        () => {\n          this.goBack();\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGVzL3VzZXIvYWRkLWl0ZW0vY29tcG9uZW50cy9mb3JtLWFjYWRlbWljL2Zvcm0tYWNhZGVtaWMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { GlobalInfoState } from '../../../../../@store/global-info/global-info.state';\nimport { Observable, Subscription } from 'rxjs';\nimport { IElement } from '../../../../../@store/global-info/global-info.model';\nimport { AcademicExperienceInput } from '../../../../../../API';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UtilsService } from '../../../../../@core/utils.service';\nimport { GetStudyAreaInfo } from '../../../../../@store/global-info/global-info.actions';\nimport { Constants } from '../../../../../@global/constants';\nimport { FormCustomValidators } from '../../../../../@shared/validators/form-custom-validators';\nimport { Utils } from '../../../../../@global/utils';\nimport { UserState } from '../../../../../@store/user/user.state';\nimport { findIndex } from 'lodash';\nimport { IAcademicExperience } from '../../../../../@store/user/user.model';\n\n@Component({\n  selector: 'app-form-academic',\n  templateUrl: './form-academic.component.html',\n  styleUrls: ['./form-academic.component.scss'],\n})\nexport class FormAcademicComponent implements OnInit, OnDestroy {\n  @Input() academicId: string;\n  @Output() sendFormAdd = new EventEmitter<AcademicExperienceInput>();\n  @Output() sendFormUpdate = new EventEmitter<AcademicExperienceInput>();\n\n  @Select(GlobalInfoState.getStudyArea) studyArea$: Observable<IElement[]>;\n  @Select(GlobalInfoState.getAcademicModality) modality$: Observable<IElement[]>;\n\n  public formGroup: FormGroup;\n  private studyArea$Subscription$: Subscription;\n  public studyAreaList: IElement[];\n  public customActionSheetStudyAreaOptions: any;\n  public modelAcademicInput: AcademicExperienceInput;\n  public maxlength = Constants.MAX_PUBLICATION_DESCRIPTION_SIZE;\n  public maxLengthTitle = Constants.MAX_LENGTH_TITLE;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private store: Store,\n    private utilsService: UtilsService\n  ) {}\n\n  ngOnInit() {\n    this.modelAcademicInput = {\n      title: '',\n      start_date: '',\n      end_date: '',\n      organization: '',\n      modality: '',\n      study_area: '',\n      location: '',\n      description: '',\n    } as AcademicExperienceInput;\n\n    this.loadStudyAreaInfo();\n    this.initForm();\n\n    const studyAreaTitle = this.translateService.instant(`formFields.studyArea`);\n    this.customActionSheetStudyAreaOptions = {\n      header: studyAreaTitle,\n    };\n\n    if (this.academicId) {\n      const academics = this.store.selectSnapshot(UserState.getAcademicProfile);\n      const index = findIndex(academics, { id: this.academicId });\n      const temporalAcademic: IAcademicExperience = index > -1 ? academics[index] : null;\n\n      this.modelAcademicInput = {\n        title: temporalAcademic.title,\n        start_date: temporalAcademic.start_date,\n        end_date: temporalAcademic.end_date,\n        organization: temporalAcademic.organization,\n        location: temporalAcademic.location,\n        description: temporalAcademic.description,\n        modality: temporalAcademic.modality?.id,\n        study_area: temporalAcademic.study_area?.id,\n      };\n      if (Utils.isBlank(this.modelAcademicInput.end_date)) {\n        this.formGroup.get('currentExperience').setValue(true);\n        this.setEndDate();\n      }\n    }\n  }\n\n  private loadStudyAreaInfo(): void {\n    this.store.dispatch(new GetStudyAreaInfo());\n    this.studyArea$Subscription$ = this.studyArea$.subscribe((data) => {\n      this.studyAreaList = data;\n    });\n  }\n\n  initForm() {\n    this.formGroup = this.formBuilder.group({\n      title: [\n        '',\n        [Validators.required, Validators.maxLength(this.maxLengthTitle), FormCustomValidators.notAllowedEmojis],\n      ],\n      organization: [\n        '',\n        [Validators.required, Validators.maxLength(this.maxLengthTitle), FormCustomValidators.notAllowedEmojis],\n      ],\n      study_area: [''],\n      start_date: ['', [Validators.required]],\n      end_date: ['', [Validators.required]],\n      location: [''],\n      currentExperience: [false],\n      description: ['', [Validators.maxLength(this.maxlength), FormCustomValidators.notAllowedEmojis]],\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.disconnectObservers();\n  }\n\n  private disconnectObservers(): void {\n    this.studyArea$Subscription$.unsubscribe();\n  }\n\n  public getMinDate() {\n    return Utils.getInitdate(70);\n  }\n\n  public getMaxDate() {\n    return Utils.getTodayDate();\n  }\n\n  public getDateDisplayFormat(): string {\n    return Constants.DATE_DISPLAY_MONTH_YEAR_FORMAT;\n  }\n\n  public getDatePickerFormat(): string {\n    return Constants.DATE_PICKER_MONTH_YEAR_FORMAT;\n  }\n\n  public getStart() {\n    return this.formGroup.get('start_date').value;\n  }\n\n  public setEndDate() {\n    if (this.formGroup.get('currentExperience').value) {\n      this.formGroup.get('end_date').setValue('');\n      this.formGroup.get('end_date').clearValidators();\n      this.formGroup.get('end_date').disable();\n      this.formGroup.get('end_date').updateValueAndValidity();\n    } else {\n      if (this.formGroup.get('start_date').value !== '') {\n        this.formGroup.get('end_date').setValue('');\n        this.formGroup.get('end_date').setValidators([Validators.required]);\n        this.formGroup.get('end_date').enable();\n        this.formGroup.get('end_date').updateValueAndValidity();\n      }\n    }\n  }\n\n  public saveAcademicProfile() {\n    if (this.utilsService.isValidForm(this.formGroup)) {\n      if (Utils.isBlank(this.modelAcademicInput.end_date)) {\n        this.modelAcademicInput.end_date = '';\n      }\n      if (this.isUpdate()) {\n        this.emitUpdate();\n      } else {\n        this.emitCreate();\n      }\n    }\n  }\n\n  private emitUpdate() {\n    this.sendFormUpdate.emit(this.modelAcademicInput);\n  }\n\n  private emitCreate() {\n    this.sendFormAdd.emit(this.modelAcademicInput);\n  }\n\n  private isUpdate() {\n    return !Utils.isBlank(this.academicId);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormAcademicComponent } from './form-academic.component';\nimport { SharedModule } from '../../../../../@shared/shared.module';\n\n@NgModule({\n  declarations: [FormAcademicComponent],\n  imports: [SharedModule],\n  exports: [FormAcademicComponent],\n})\nexport class FormAcademicModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGVzL3VzZXIvYWRkLWl0ZW0vY29tcG9uZW50cy9mb3JtLWV4cGVyaWVuY2UvZm9ybS1leHBlcmllbmNlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { GlobalInfoState } from '../../../../../@store/global-info/global-info.state';\nimport { Observable, Subscription } from 'rxjs';\nimport { IElement } from '../../../../../@store/global-info/global-info.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GetOpportunityTypeInfo, GetWorkAreaInfo } from '../../../../../@store/global-info/global-info.actions';\nimport { Constants } from '../../../../../@global/constants';\nimport { FormCustomValidators } from '../../../../../@shared/validators/form-custom-validators';\nimport { Utils } from '../../../../../@global/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UtilsService } from '../../../../../@core/utils.service';\nimport { ProfessionalExperienceInput } from '../../../../../../API';\nimport { UserState } from '../../../../../@store/user/user.state';\nimport { findIndex } from 'lodash';\nimport { IProfessionalExperience } from '../../../../../@store/user/user.model';\n\n@Component({\n  selector: 'app-form-experience',\n  templateUrl: './form-experience.component.html',\n  styleUrls: ['./form-experience.component.scss'],\n})\nexport class FormExperienceComponent implements OnInit, OnDestroy {\n  @Input() experienceId: string;\n  @Output() sendFormAdd = new EventEmitter<ProfessionalExperienceInput>();\n  @Output() sendFormUpdate = new EventEmitter<ProfessionalExperienceInput>();\n\n  @Select(GlobalInfoState.getWorkArea) workArea$: Observable<IElement[]>;\n  @Select(GlobalInfoState.getOpportunities) opportunity$: Observable<IElement[]>;\n\n  public formGroup: FormGroup;\n  private workAreaSubscription$: Subscription;\n  private opportunitySubscription$: Subscription;\n  public workAreaList: IElement[];\n  public opportunityList: IElement[];\n  public customActionSheetWorkAreaOptions: any;\n  public customActionSheetOpportunitiesOptions: any;\n  public modelExperienceInput: ProfessionalExperienceInput;\n  public maxlength = Constants.MAX_PUBLICATION_DESCRIPTION_SIZE;\n  public maxLengthTitle = Constants.MAX_LENGTH_TITLE;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private store: Store,\n    private utilsService: UtilsService\n  ) {}\n\n  ngOnInit() {\n    this.modelExperienceInput = {\n      title: '',\n      start_date: '',\n      end_date: '',\n      organization: '',\n      work_type: '',\n      work_area: '',\n      location: '',\n      description: '',\n    } as ProfessionalExperienceInput;\n\n    this.loadSportsInfo();\n    this.loadOpportunityInfo();\n    this.initForm();\n\n    const workAreaTitle = this.translateService.instant(`formFields.workArea`);\n    this.customActionSheetWorkAreaOptions = {\n      header: workAreaTitle,\n    };\n\n    const opportunityTitle = this.translateService.instant(`formFields.workType`);\n    this.customActionSheetOpportunitiesOptions = {\n      header: opportunityTitle,\n    };\n\n    if (this.experienceId) {\n      const experiences = this.store.selectSnapshot(UserState.getExperienceProfile);\n      const index = findIndex(experiences, { id: this.experienceId });\n      const temporalExperience: IProfessionalExperience = index > -1 ? experiences[index] : null;\n\n      this.modelExperienceInput = {\n        title: temporalExperience.title,\n        start_date: temporalExperience.start_date,\n        end_date: temporalExperience.end_date,\n        organization: temporalExperience.organization,\n        work_type: temporalExperience.work_type?.id,\n        work_area: temporalExperience.work_area?.id,\n        location: temporalExperience.location,\n        description: temporalExperience.description,\n      };\n      if (Utils.isBlank(this.modelExperienceInput.end_date)) {\n        this.formGroup.get('currentExperience').setValue(true);\n        this.setEndDate();\n      }\n    }\n  }\n\n  private loadSportsInfo(): void {\n    this.store.dispatch(new GetWorkAreaInfo());\n    this.workAreaSubscription$ = this.workArea$.subscribe((data) => {\n      this.workAreaList = data;\n    });\n  }\n\n  private loadOpportunityInfo(): void {\n    this.store.dispatch(new GetOpportunityTypeInfo());\n    this.opportunitySubscription$ = this.opportunity$.subscribe((data) => {\n      this.opportunityList = data;\n    });\n  }\n\n  initForm() {\n    this.formGroup = this.formBuilder.group({\n      title: [\n        '',\n        [Validators.required, Validators.maxLength(this.maxLengthTitle), FormCustomValidators.notAllowedEmojis],\n      ],\n      organization: [\n        '',\n        [Validators.required, Validators.maxLength(this.maxLengthTitle), FormCustomValidators.notAllowedEmojis],\n      ],\n      work_type: [''],\n      work_area: [''],\n      start_date: ['', [Validators.required]],\n      end_date: ['', [Validators.required]],\n      location: [''],\n      currentExperience: [false],\n      description: ['', [Validators.maxLength(this.maxlength), FormCustomValidators.notAllowedEmojis]],\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.disconnectObservers();\n  }\n\n  private disconnectObservers(): void {\n    this.workAreaSubscription$.unsubscribe();\n    this.opportunitySubscription$.unsubscribe();\n  }\n\n  public getMinDate() {\n    return Utils.getInitdate(70);\n  }\n\n  public getMaxDate() {\n    return Utils.getTodayDate();\n  }\n\n  public getDateDisplayFormat(): string {\n    return Constants.DATE_DISPLAY_MONTH_YEAR_FORMAT;\n  }\n\n  public getDatePickerFormat(): string {\n    return Constants.DATE_PICKER_MONTH_YEAR_FORMAT;\n  }\n\n  public setEndDate() {\n    if (this.formGroup.get('currentExperience').value) {\n      this.formGroup.get('end_date').setValue('');\n      this.formGroup.get('end_date').clearValidators();\n      this.formGroup.get('end_date').disable();\n      this.formGroup.get('end_date').updateValueAndValidity();\n    } else {\n      if (this.formGroup.get('start_date').value !== '') {\n        this.formGroup.get('end_date').setValue('');\n        this.formGroup.get('end_date').setValidators([Validators.required]);\n        this.formGroup.get('end_date').enable();\n        this.formGroup.get('end_date').updateValueAndValidity();\n      }\n    }\n  }\n\n  public saveExperienceProfile() {\n    if (this.utilsService.isValidForm(this.formGroup)) {\n      if (Utils.isBlank(this.modelExperienceInput.end_date)) {\n        this.modelExperienceInput.end_date = '';\n      }\n      if (this.isUpdate()) {\n        this.emitUpdate();\n      } else {\n        this.emitCreate();\n      }\n    }\n  }\n\n  private emitUpdate() {\n    this.sendFormUpdate.emit(this.modelExperienceInput);\n  }\n\n  private emitCreate() {\n    this.sendFormAdd.emit(this.modelExperienceInput);\n  }\n\n  private isUpdate() {\n    return !Utils.isBlank(this.experienceId);\n  }\n\n  public getStart() {\n    return this.formGroup.get('start_date').value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormExperienceComponent } from './form-experience.component';\nimport { SharedModule } from '../../../../../@shared/shared.module';\n\n@NgModule({\n  declarations: [FormExperienceComponent],\n  imports: [SharedModule],\n  exports: [FormExperienceComponent],\n})\nexport class FormExperienceComponentModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGVzL3VzZXIvYWRkLWl0ZW0vY29tcG9uZW50cy9mb3JtLXNraWxsL2Zvcm0tc2tpbGwuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Constants } from '../../../../../@global/constants';\nimport { FormCustomValidators } from '../../../../../@shared/validators/form-custom-validators';\nimport { UtilsService } from '../../../../../@core/utils.service';\n\n@Component({\n  selector: 'app-form-skill',\n  templateUrl: './form-skill.component.html',\n  styleUrls: ['./form-skill.component.scss'],\n})\nexport class FormSkillComponent implements OnInit {\n  public formGroup: FormGroup;\n  public maxLength = Constants.MAX_LENGTH_TITLE;\n  @Output() sendForm = new EventEmitter<string>();\n\n  constructor(private formBuilder: FormBuilder, private utilsService: UtilsService) {}\n\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      title: ['', [Validators.required, FormCustomValidators.notAllowedEmojis, Validators.maxLength(this.maxLength)]],\n    });\n  }\n\n  saveSkill() {\n    if (this.utilsService.isValidForm(this.formGroup)) {\n      this.sendForm.emit(this.formGroup.get('title').value);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormSkillComponent } from './form-skill.component';\nimport { SharedModule } from '../../../../../@shared/shared.module';\n\n@NgModule({\n  declarations: [FormSkillComponent],\n  imports: [SharedModule],\n  exports: [FormSkillComponent],\n})\nexport class FormSkillModule {}\n"],"sourceRoot":"webpack:///"}