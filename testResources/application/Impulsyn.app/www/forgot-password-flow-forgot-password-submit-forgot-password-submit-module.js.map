{"version":3,"sources":["./src/app/forgot-password-flow/forgot-password-submit/forgot-password-submit.page.html","./src/app/forgot-password-flow/forgot-password-submit/forgot-password-submit-routing.module.ts","./src/app/forgot-password-flow/forgot-password-submit/forgot-password-submit.module.ts","./src/app/forgot-password-flow/forgot-password-submit/forgot-password-submit.page.scss","./src/app/forgot-password-flow/forgot-password-submit/forgot-password-submit.page.ts"],"names":[],"mappings":"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","file":"forgot-password-flow-forgot-password-submit-forgot-password-submit-module.js","sourcesContent":["export default \"<app-header [showBackButton]=\\\"showBackButton\\\" [titleImage]=\\\"logoPath\\\" (backButtonClick)=\\\"goBack()\\\"></app-header>\\n\\n<ion-content class=\\\"ion-padding background-with-dark-color\\\">\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <div class=\\\"flex-container-vertical flex-align-items-center ion-margin-bottom ion-padding-bottom\\\">\\n      <ion-row class=\\\"flex-item\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n          <div class=\\\"screen-extrabig-title\\\" [innerHTML]=\\\"'forgotPasswordSubmit.title' | translate\\\"></div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"flex-item ion-padding-vertical ion-margin-vertical\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n          <span class=\\\"small-size ion-text-center ion-margin-top\\\"\\n            >{{ 'forgotPasswordSubmit.codeMessage' | translate }}</span\\n          >\\n        </ion-col>\\n      </ion-row>\\n      <div class=\\\"pr col-xs-10 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin-bottom ion-margin-top input-background\\\">\\n          <ion-label appPlatformMode>{{'formFields.verificationCode' | translate}}</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            inputmode=\\\"numeric\\\"\\n            formControlName=\\\"code\\\"\\n            required\\n            data-test=\\\"forgot-password-code-input\\\"\\n          >\\n          </ion-input>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['code']\\\"></app-show-errors>\\n      </div>\\n      <div class=\\\"pr col-xs-10 col-sm-8 col-lg-6 ion-text-end\\\">\\n        <a color=\\\"white\\\" class=\\\"small-size ion-text-end underline\\\" data-test=\\\"resend-code-link\\\" (click)=\\\"resendCode()\\\"\\n          >{{ 'formFields.resendCode' |translate}}</a\\n        >\\n      </div>\\n      <div class=\\\"pr col-xs-10 col-sm-8 col-lg-6\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"ion-margin-bottom ion-margin-top input-background\\\">\\n          <ion-label appPlatformMode>{{'formFields.newPass' | translate}}</ion-label>\\n          <ion-input\\n            [type]=\\\"seePassword ? 'text' : 'password'\\\"\\n            inputmode=\\\"text\\\"\\n            maxlength=\\\"25\\\"\\n            formControlName=\\\"newPassword\\\"\\n            required\\n            data-test=\\\"forgot-password-new-pass\\\"\\n            class=\\\"pass-input\\\"\\n          >\\n          </ion-input>\\n          <app-icon-clicked\\n            color=\\\"secondary\\\"\\n            class=\\\"extrabig-size icon-input-end\\\"\\n            (buttonClick)=\\\"onSeePassword($event)\\\"\\n            [iconNameInitial]=\\\"'eye-outline'\\\"\\n            [iconNameTapped]=\\\"'eye-off-outline'\\\"\\n          ></app-icon-clicked>\\n        </ion-item>\\n        <app-show-errors [control]=\\\"formGroup.controls['newPassword']\\\"></app-show-errors>\\n      </div>\\n    </div>\\n    <app-action-button (actionButtonClick)=\\\"onForgotPasswordSubmit()\\\" [buttonText]=\\\"'savePassword'\\\"></app-action-button>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotPasswordSubmitPage } from './forgot-password-submit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordSubmitPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordSubmitPageRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { ForgotPasswordSubmitPageRoutingModule } from './forgot-password-submit-routing.module';\n\nimport { ForgotPasswordSubmitPage } from './forgot-password-submit.page';\nimport { SharedModule } from '../../@shared/shared.module';\n\n@NgModule({\n  imports: [SharedModule, ForgotPasswordSubmitPageRoutingModule],\n  declarations: [ForgotPasswordSubmitPage],\n})\nexport class ForgotPasswordSubmitPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC1mbG93L2ZvcmdvdC1wYXNzd29yZC1zdWJtaXQvZm9yZ290LXBhc3N3b3JkLXN1Ym1pdC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Store } from '@ngxs/store';\nimport { take } from 'rxjs/operators';\nimport { ForgotPasswordSubmit, ResendVerificationCode } from '../../@store/auth/auth.actions';\nimport { BasePage } from '../../base/base.page';\nimport { NavigationExtrasService } from '../../@core/navigation-extras.service';\nimport { FormCustomValidators } from '../../@shared/validators/form-custom-validators';\nimport { StorageService } from '../../@core/storage.service';\nimport { CredentialsModel } from '../../login/model/credentials';\nimport { UtilsService } from '../../@core/utils.service';\nimport { InformService } from '../../@core/inform.service';\nimport { Constants } from '../../@global/constants';\nimport { GlobalInfoState } from '../../@store/global-info/global-info.state';\n\n@Component({\n  selector: 'app-forgot-password-submit',\n  templateUrl: './forgot-password-submit.page.html',\n  styleUrls: ['./forgot-password-submit.page.scss'],\n})\nexport class ForgotPasswordSubmitPage extends BasePage implements OnInit {\n  public formGroup: FormGroup;\n  private username: string;\n  public seePassword = false;\n\n  constructor(\n    router: Router,\n    location: Location,\n    store: Store,\n    utilsService: UtilsService,\n    private formBuilder: FormBuilder,\n    private navigationExtrasService: NavigationExtrasService,\n    private storage: StorageService,\n    private informService: InformService\n  ) {\n    super(location, router, store, utilsService);\n  }\n\n  ngOnInit() {\n    this.username = this.navigationExtrasService.getExtras()?.username;\n\n    if (!this.username) {\n      console.error('Missing username');\n    }\n\n    this.initForm();\n  }\n\n  private initForm(): void {\n    this.formGroup = this.formBuilder.group({\n      code: ['', [Validators.required, FormCustomValidators.validateVerificationCode]],\n      newPassword: ['', [Validators.required, FormCustomValidators.validatePassPattern]],\n    });\n  }\n\n  public onForgotPasswordSubmit(): void {\n    this.formGroup.markAllAsTouched();\n    if (this.formGroup.get('code').invalid) {\n      this.informService.showWarning('formValidations.checkCode');\n    } else {\n      if (this.utilsService.isValidForm(this.formGroup)) {\n        const code = this.formGroup.get('code').value;\n        const newPassword = this.formGroup.get('newPassword').value;\n\n        this.store\n          .dispatch(\n            new ForgotPasswordSubmit({\n              username: this.username,\n              code,\n              newPassword,\n            })\n          )\n          .pipe(take(1))\n          .subscribe(\n            () => {\n              this.utilsService\n                .logIn({ username: this.username, password: newPassword })\n                .pipe(take(1))\n                .subscribe(\n                  async () => {\n                    this.informService.showInfo('formValidations.changePassSuccess');\n\n                    if (this.store.selectSnapshot(GlobalInfoState.getVersionInfo).user_needs_accept_app) {\n                      this.router.navigate([Constants.DOWNLOAD_NEW_VERSION_PAGE]);\n                      return;\n                    }\n\n                    this.setUserCredentials(this.username, newPassword);\n                    this.router.navigate([Constants.FIRST_PAGE_AFTER_LOGIN]);\n                  },\n                  (error) => {\n                    console.log(error);\n                    this.router.navigate(['/login']);\n                  }\n                );\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n      }\n    }\n  }\n\n  private setUserCredentials(username: string, password: string): void {\n    const userCredentials = new CredentialsModel(username, password);\n    this.storage.setCredentials(userCredentials);\n    this.storage.setRememberUser(true);\n  }\n\n  public resendCode(): void {\n    this.store\n      .dispatch(\n        new ResendVerificationCode({\n          username: this.username,\n        })\n      )\n      .pipe(take(1))\n      .subscribe(\n        () => {\n          this.informService.showInfo('formValidations.resendCodeSuccess');\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  public onSeePassword($event: any): void {\n    this.seePassword = !this.seePassword;\n  }\n}\n"],"sourceRoot":"webpack:///"}