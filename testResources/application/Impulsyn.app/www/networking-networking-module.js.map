{"version":3,"sources":["./src/app/networking/networking.page.html","./src/app/networking/networking-routing.module.ts","./src/app/networking/networking.module.ts","./src/app/networking/networking.page.scss","./src/app/networking/networking.page.ts"],"names":[],"mappings":"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","file":"networking-networking-module.js","sourcesContent":["export default \"<ion-content class=\\\"item-list\\\">\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <div\\n    (click)=\\\"navigateTo('my-network')\\\"\\n    color=\\\"secondary\\\"\\n    class=\\\"flex-compatible ion-align-items-center ion-margin-bottom marginTop ion-padding-vertical w100 background-white ion-text-start\\\"\\n  >\\n    <span class=\\\"bold ion-padding-start regular-size\\\">{{ \\\"networking.myNetwork\\\" | translate}}</span>\\n    <ion-icon name=\\\"chevron-forward-outline\\\" class=\\\"extrabig-size\\\"></ion-icon>\\n  </div>\\n\\n  <!--  start request list-->\\n  <div\\n    *ngIf=\\\"itemsPending?.length > 0\\\"\\n    color=\\\"secondary\\\"\\n    [routerLink]=\\\"'/my-requests'\\\"\\n    class=\\\"flex-compatible ion-align-items-center marginBottom ion-margin-top ion-padding-vertical w100 background-white ion-text-start\\\"\\n  >\\n    <span class=\\\"bold ion-padding-start regular-size\\\">{{ \\\"networking.requests\\\" | translate}}</span>\\n    <ion-icon name=\\\"chevron-forward-outline\\\" class=\\\"extrabig-size\\\"></ion-icon>\\n  </div>\\n  <div *ngFor=\\\"let item of itemsPending | slice:0:maxRequests\\\">\\n    <app-item-request\\n      [info]=\\\"item\\\"\\n      (acceptClick)=\\\"onResponseRequest($event, true)\\\"\\n      (cancelClick)=\\\"onResponseRequest($event, false)\\\"\\n      (actionItemClick)=\\\"onItemClick($event)\\\"\\n    ></app-item-request>\\n  </div>\\n  <div\\n    *ngIf=\\\"itemsPending?.length > maxRequests\\\"\\n    color=\\\"secondary\\\"\\n    class=\\\"marginTop paddingVertical w100 background-white ion-text-center\\\"\\n  >\\n    <span class=\\\"bold ion-padding-start\\\" [routerLink]=\\\"'/my-requests'\\\">{{ \\\"networking.seeAll\\\" | translate}}</span>\\n  </div>\\n  <!--  end request list-->\\n\\n  <!--  start suggestions list-->\\n  <div\\n    *ngIf=\\\"(userSuggestionsList$ | async)?.length > 0\\\"\\n    color=\\\"secondary\\\"\\n    [routerLink]=\\\"'/my-suggestions'\\\"\\n    class=\\\"marginBottom ion-margin-top flex-compatible ion-align-items-center ion-padding-vertical w100 background-white ion-text-start\\\"\\n  >\\n    <span class=\\\"bold ion-padding-start regular-size\\\">{{ \\\"networking.connections\\\" | translate}}</span>\\n    <ion-icon name=\\\"chevron-forward-outline\\\" class=\\\"extrabig-size\\\"></ion-icon>\\n  </div>\\n  <app-suggestions-list\\n    *ngIf=\\\"itemsSuggestions\\\"\\n    (itemClick)=\\\"onItemClick($event)\\\"\\n    (followPageClick)=\\\"onFollowPage($event)\\\"\\n    [itemsRequests]=\\\"itemsRequests\\\"\\n    [maxSuggestions]=\\\"maxSuggestions\\\"\\n    [itemsSuggestions]=\\\"itemsSuggestions\\\"\\n    (requestConnectionClick)=\\\"onRequestConnection($event)\\\"\\n    [pages]=\\\"pages\\\"\\n  ></app-suggestions-list>\\n  <div\\n    *ngIf=\\\"(userSuggestionsList$ | async)?.length > maxSuggestions\\\"\\n    color=\\\"secondary\\\"\\n    [routerLink]=\\\"'/my-suggestions'\\\"\\n    class=\\\"marginTop ion-margin-bottom paddingVertical w100 background-white ion-text-center\\\"\\n  >\\n    <span class=\\\"bold ion-padding-start\\\">{{ \\\"networking.seeMore\\\" | translate}}</span>\\n  </div>\\n  <!--  end suggestions list-->\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NetworkingPage } from './networking.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NetworkingPage,\n  },\n  {\n    path: 'my-network',\n    loadChildren: () => import('./my-network/my-network.module').then((m) => m.MyNetworkPageModule),\n  },\n  {\n    path: 'my-suggestions',\n    loadChildren: () => import('./my-suggestions/my-suggestions.module').then((m) => m.MySuggestionsPageModule),\n  },\n  {\n    path: 'my-requests',\n    loadChildren: () => import('./my-requests/my-requests.module').then((m) => m.MyRequestsPageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NetworkingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { NetworkingPageRoutingModule } from './networking-routing.module';\n\nimport { NetworkingPage } from './networking.page';\nimport { SharedModule } from '../@shared/shared.module';\nimport { ItemRequestComponentModule } from './components/item-request/item-request.module';\nimport { ItemSuggestionModule } from './components/item-suggestion/item-suggestion.module';\n\n@NgModule({\n  imports: [SharedModule, NetworkingPageRoutingModule, ItemRequestComponentModule, ItemSuggestionModule],\n  declarations: [NetworkingPage],\n})\nexport class NetworkingPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldHdvcmtpbmcvbmV0d29ya2luZy5wYWdlLnNjc3MifQ== */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Constants } from '../@global/constants';\nimport { Router } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { UserPublicInfo } from './models/user-public-info.model';\nimport { ConnectionRequestModel } from './models/connection-request.model';\nimport { NetworkingControllersService } from './services/networking-controllers.service';\nimport { NetworkState } from '../@store/network/network.state';\nimport { IOrganizationInfo } from '../@shared/interfaces/organization-info';\nimport { UtilsService } from '../@core/utils.service';\nimport { PUBLISHER_TYPE } from '../@shared/enums/publisher-type';\nimport { FollowPageAction, GetFollowedPages } from '../@store/pages/pages.actions';\nimport { PagesState } from '../@store/pages/pages.state';\nimport {\n  GetPendingRequestsAction,\n  GetRequestsSentAction,\n  GetSuggestionsAction,\n} from '../@store/network/network.actions';\n\nconst MAX_REQUESTS_ITEMS = 3;\nconst MAX_SUGGESTIONS_ITEMS = 5;\n\n@Component({\n  selector: 'app-networking',\n  templateUrl: './networking.page.html',\n  styleUrls: ['./networking.page.scss'],\n})\nexport class NetworkingPage implements OnInit, OnDestroy {\n  @Select(NetworkState.getSuggestions) userSuggestionsList$: Observable<(UserPublicInfo | IOrganizationInfo)[]>;\n  @Select(NetworkState.getPending) userPendingList$: Observable<ConnectionRequestModel[]>;\n  @Select(NetworkState.getRequested) userSentList$: Observable<ConnectionRequestModel[]>;\n  @Select(PagesState.getFollowedPageList) userPagesList$: Observable<IOrganizationInfo[]>;\n\n  private subscriptionSuggestions$: Subscription;\n  private subscriptionPending$: Subscription;\n  private subscriptionRequested$: Subscription;\n  private subscriptionPages$: Subscription;\n\n  public pages: IOrganizationInfo[];\n  public itemsPending: ConnectionRequestModel[];\n  public itemsRequests: ConnectionRequestModel[];\n  public itemsSuggestions: (UserPublicInfo | IOrganizationInfo)[];\n\n  public imagePathOnboarding = Constants.ONBOARDING_IMAGE_PATH;\n  public maxRequests = MAX_REQUESTS_ITEMS;\n  public maxSuggestions = MAX_SUGGESTIONS_ITEMS;\n\n  constructor(\n    private router: Router,\n    private store: Store,\n    private networkingService: NetworkingControllersService,\n    private utilsService: UtilsService\n  ) {}\n\n  ngOnInit() {\n    this.subscribeToRequested();\n    this.subscribeToSuggestions();\n    this.subscribeToPending();\n    this.subscribeToPages();\n  }\n\n  ionViewWillEnter() {\n    this.networkingService.loadData();\n  }\n\n  public doRefresh(event): void {\n    this.store.dispatch(new GetRequestsSentAction());\n    this.store.dispatch(new GetPendingRequestsAction());\n    this.store.dispatch(new GetFollowedPages());\n    const subscription = this.store.dispatch(new GetSuggestionsAction()).subscribe(\n      () => {\n        subscription.unsubscribe();\n        event.target.complete();\n      },\n      (error) => {\n        subscription.unsubscribe();\n        event.target.complete();\n      }\n    );\n  }\n\n  private subscribeToPages(): void {\n    this.subscriptionPages$ = this.userPagesList$.subscribe((data) => {\n      this.pages = data;\n    });\n  }\n\n  private subscribeToRequested(): void {\n    this.subscriptionRequested$ = this.userSentList$.subscribe((data) => {\n      this.itemsRequests = data;\n    });\n  }\n\n  private subscribeToSuggestions(): void {\n    this.subscriptionSuggestions$ = this.userSuggestionsList$.subscribe((data) => {\n      this.itemsSuggestions = data;\n    });\n  }\n\n  private subscribeToPending(): void {\n    this.subscriptionPending$ = this.userPendingList$.subscribe((data) => {\n      this.itemsPending = data;\n    });\n  }\n\n  public onResponseRequest(id, accept) {\n    this.networkingService.onResponseRequest(id, accept);\n  }\n\n  public onRequestConnection($event) {\n    this.networkingService.onRequestConnection($event.id);\n  }\n\n  public onFollowPage($event) {\n    const index = this.itemsSuggestions.findIndex((item) => item.id === $event.id);\n    const organization = this.itemsSuggestions[index] as IOrganizationInfo;\n    this.store.dispatch(new FollowPageAction({ organization }));\n  }\n\n  public onItemClick($event) {\n    this.utilsService.goProfile($event.model.id, !$event.isOrganization ? PUBLISHER_TYPE.USER : 0);\n  }\n\n  public navigateTo(url) {\n    this.router.navigate([url]);\n  }\n\n  ngOnDestroy(): void {\n    this.disconnectObservers();\n  }\n\n  public disconnectObservers(): void {\n    if (this.subscriptionSuggestions$) {\n      this.subscriptionSuggestions$.unsubscribe();\n    }\n    if (this.subscriptionPending$) {\n      this.subscriptionPending$.unsubscribe();\n    }\n    if (this.subscriptionRequested$) {\n      this.subscriptionRequested$.unsubscribe();\n    }\n    if (this.subscriptionPages$) {\n      this.subscriptionPages$.unsubscribe();\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}