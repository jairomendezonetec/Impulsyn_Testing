{"version":3,"sources":["./src/app/opportunity/opportunity.page.html","./src/app/opportunity/opportunity-routing.module.ts","./src/app/opportunity/opportunity.module.ts","./src/app/opportunity/opportunity.page.scss","./src/app/opportunity/opportunity.page.ts"],"names":[],"mappings":"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","file":"opportunity-opportunity-module.js","sourcesContent":["export default \"<app-header [title]=\\\"'opportunity.title' | translate\\\" [showBackButton]=\\\"showBackButton\\\" (backButtonClick)=\\\"goBack()\\\">\\n</app-header>\\n<ion-content>\\n  <ion-grid class=\\\"flex-container\\\">\\n    <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\n      <div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.title' | translate}}</ion-label>\\n            <ion-input type=\\\"text\\\" inputmode=\\\"text\\\" autocomplete=\\\"off\\\" [formControlName]=\\\"'title'\\\" required></ion-input>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['title']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n      <div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.description' | translate}}</ion-label>\\n            <ion-textarea\\n              type=\\\"text\\\"\\n              inputmode=\\\"text\\\"\\n              rows=\\\"8\\\"\\n              [maxlength]=\\\"maxlength\\\"\\n              [formControlName]=\\\"'description'\\\"\\n            ></ion-textarea>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['description']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.responsibilities' | translate}}</ion-label>\\n            <ion-textarea\\n              type=\\\"text\\\"\\n              inputmode=\\\"text\\\"\\n              rows=\\\"8\\\"\\n              [maxlength]=\\\"maxlength\\\"\\n              [formControlName]=\\\"'responsibilities'\\\"\\n            ></ion-textarea>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['responsibilities']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.requirements' | translate}}</ion-label>\\n            <ion-textarea\\n              type=\\\"text\\\"\\n              inputmode=\\\"text\\\"\\n              rows=\\\"8\\\"\\n              [maxlength]=\\\"maxlength\\\"\\n              [formControlName]=\\\"'requirements'\\\"\\n            ></ion-textarea>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['requirements']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.workArea' | translate}}</ion-label>\\n            <ion-select\\n              interface=\\\"action-sheet\\\"\\n              formControlName=\\\"work_area\\\"\\n              class=\\\"custom-alert\\\"\\n              okText=\\\"{{ 'buttons.accept' | translate }}\\\"\\n              cancelText=\\\"{{ 'buttons.cancel' | translate }}\\\"\\n              [interfaceOptions]=\\\"customActionSheetWorkAreaOptions\\\"\\n            >\\n              <ion-select-option *ngFor=\\\"let workArea of workAreaList\\\" [value]=\\\"workArea.id\\\">\\n                {{ 'workArea.' + workArea.name | translate }}</ion-select-option\\n              >\\n            </ion-select>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['work_area']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n      <!--sports-->\\n      <div class=\\\"flex-justify-content-center ion-margin\\\" *ngIf=\\\"!hasSport\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6 ion-text-center flex-compatible ion-align-items-center\\\">\\n          <div\\n            class=\\\"pr col-xs-12 col-sm-8 col-lg-6 ion-text-start flex-compatible ion-margin-start ion-align-items-center\\\"\\n          >\\n            <span>{{'sports.sportRelated' | translate}}</span>\\n          </div>\\n          <div\\n            class=\\\"pr col-xs-12 col-sm-8 col-lg-6 ion-text-center flex-compatible ion-margin-start ion-align-items-center\\\"\\n          >\\n            <ion-button class=\\\"secondary-button\\\" (click)=\\\"openSportsModal()\\\"\\n              >{{'editProfile.select' | translate}}\\n            </ion-button>\\n          </div>\\n        </div>\\n      </div>\\n      <ion-row class=\\\"flex-justify-content-center ion-margin sports\\\" *ngIf=\\\"hasSport\\\">\\n        <div\\n          class=\\\"pr col-xs-12 col-sm-8 col-lg-6 ion-text-start flex-container-vertical ion-align-items-start ion-padding-end\\\"\\n        >\\n          <ion-icon name=\\\"pencil\\\" class=\\\"extrabig-size editIcon\\\" (click)=\\\"openSportsModal()\\\"></ion-icon>\\n          <div\\n            class=\\\"pr col-xs-12 col-sm-8 col-lg-6 ion-text-start flex-compatible ion-margin-start ion-align-items-center\\\"\\n          >\\n            <span>{{'sports.sportRelated' | translate}}</span>\\n          </div>\\n          <div class=\\\"pr col-xs-11 col-sm-12 ion-text-start ion-margin-start ion-padding-end sportsListDetail\\\">\\n            <span\\n              *ngFor=\\\"let item of sportsList; index as i\\\"\\n              color=\\\"grey\\\"\\n              class=\\\"regular-size ion-padding-end userLocation\\\"\\n            >\\n              {{ 'sports.' + item.name | translate }}{{(i === sportsList.length - 1) ? '' : ','}}\\n            </span>\\n          </div>\\n        </div>\\n      </ion-row>\\n      <div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.opportunityType' | translate}}</ion-label>\\n            <ion-select\\n              interface=\\\"action-sheet\\\"\\n              formControlName=\\\"opportunity_type\\\"\\n              class=\\\"custom-alert\\\"\\n              okText=\\\"{{ 'buttons.accept' | translate }}\\\"\\n              cancelText=\\\"{{ 'buttons.cancel' | translate }}\\\"\\n              [interfaceOptions]=\\\"customActionSheetOpportunityTypeOptions\\\"\\n            >\\n              <ion-select-option *ngFor=\\\"let opportunityType of opportunityTypeList\\\" [value]=\\\"opportunityType.id\\\">\\n                {{ 'opportunityType.' + opportunityType.name | translate }}</ion-select-option\\n              >\\n            </ion-select>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['opportunity_type']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n      <!--<div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.language' | translate}}</ion-label>\\n            <ion-input type=\\\"text\\\" inputmode=\\\"text\\\" autocomplete=\\\"off\\\" [formControlName]=\\\"'language'\\\"> </ion-input>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['language']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n      <div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.salaryRange' | translate}}</ion-label>\\n            <ion-input type=\\\"text\\\" inputmode=\\\"numeric\\\" autocomplete=\\\"off\\\" [formControlName]=\\\"'salary_range'\\\">\\n            </ion-input>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['salary_range']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n      <div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.website' | translate}}</ion-label>\\n            <ion-input type=\\\"text\\\" inputmode=\\\"text\\\" autocomplete=\\\"off\\\" [formControlName]=\\\"'website'\\\"> </ion-input>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['website']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n      <div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.experienceRange' | translate}}</ion-label>\\n            <ion-input type=\\\"text\\\" inputmode=\\\"text\\\" autocomplete=\\\"off\\\" [formControlName]=\\\"'experienced_range'\\\">\\n            </ion-input>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['experienced_range']\\\"></app-show-errors>\\n        </div>\\n      </div>-->\\n\\n      <!-- Location -->\\n      <ion-row class=\\\"flex-justify-content-center ion-margin ion-padding-bottom location\\\" *ngIf=\\\"hasLocation\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6 ion-text-start flex-container-vertical ion-align-items-start\\\">\\n          <ion-icon name=\\\"pencil\\\" class=\\\"extrabig-size editIcon\\\" [routerLink]=\\\"'/select-program-location'\\\"></ion-icon>\\n          <div\\n            class=\\\"pr col-xs-12 col-sm-12 col-lg-6 ion-text-center flex-compatible ion-margin-start ion-align-items-center\\\"\\n          >\\n            <span>{{'editProfile.location' | translate}}</span>\\n          </div>\\n          <div class=\\\"pr col-xs-11 col-sm-12 flex-compatible ion-margin-start ion-align-items-center\\\">\\n            <span color=\\\"grey\\\" class=\\\"regular-size ion-padding-end userLocation\\\">{{ opportunityLocation }}</span>\\n          </div>\\n        </div>\\n      </ion-row>\\n      <div class=\\\"flex-justify-content-center ion-margin ion-padding-bottom\\\" *ngIf=\\\"!hasLocation\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6 ion-text-center flex-compatible ion-align-items-center\\\">\\n          <div\\n            class=\\\"pr col-xs-12 col-sm-6 col-lg-6 ion-text-center flex-compatible ion-margin-start ion-align-items-center\\\"\\n          >\\n            <span>{{'editProfile.location' | translate}}</span>\\n          </div>\\n          <div\\n            class=\\\"pr col-xs-12 col-sm-6 col-lg-6 ion-text-center flex-compatible ion-margin-start ion-align-items-center\\\"\\n          >\\n            <ion-button class=\\\"secondary-button\\\" [routerLink]=\\\"'/select-program-location'\\\"\\n              >{{'editProfile.select' | translate}}\\n            </ion-button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"flex-justify-content-center ion-margin ion-padding-top\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6 ion-text-start flex-compatible ion-margin-start\\\">\\n          <span color=\\\"secondary\\\" class=\\\"bold\\\">{{'opportunity.requestOpportunityTitle' | translate}}</span>\\n        </div>\\n      </div>\\n      <div class=\\\"flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item class=\\\"ion-no-border apply-checkbox\\\">\\n            <ion-checkbox\\n              formControlName=\\\"check_email\\\"\\n              color=\\\"secondary\\\"\\n              (ionChange)=\\\"setOptionSelected(1)\\\"\\n            ></ion-checkbox>\\n            <ion-label>{{ 'opportunity.email' | translate }}</ion-label>\\n          </ion-item>\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.contact_email' | translate}}</ion-label>\\n            <ion-input\\n              type=\\\"email\\\"\\n              inputmode=\\\"email\\\"\\n              [disabled]=\\\"true\\\"\\n              autocomplete=\\\"off\\\"\\n              [formControlName]=\\\"'contact_email'\\\"\\n            >\\n            </ion-input>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['contact_email']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n      <div class=\\\"ion-margin-bottom flex-justify-content-center\\\">\\n        <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n          <ion-item class=\\\"ion-no-border apply-checkbox\\\">\\n            <ion-checkbox\\n              formControlName=\\\"check_website\\\"\\n              color=\\\"secondary\\\"\\n              (ionChange)=\\\"setOptionSelected(2)\\\"\\n            ></ion-checkbox>\\n            <ion-label>{{ 'opportunity.website' | translate }}</ion-label>\\n          </ion-item>\\n          <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n            <ion-label appPlatformMode>{{'formFields.website' | translate}}</ion-label>\\n            <ion-input type=\\\"text\\\" [disabled]=\\\"true\\\" inputmode=\\\"text\\\" autocomplete=\\\"off\\\" [formControlName]=\\\"'website'\\\">\\n            </ion-input>\\n          </ion-item>\\n          <app-show-errors [control]=\\\"formGroup.controls['website']\\\"></app-show-errors>\\n        </div>\\n      </div>\\n      <app-action-button\\n        class=\\\"ion-margin-top ion-padding-vertical\\\"\\n        (actionButtonClick)=\\\"saveOpportunity()\\\"\\n        [buttonText]=\\\"'buttons.post'\\\"\\n      ></app-action-button>\\n    </form>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OpportunityPage } from './opportunity.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OpportunityPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OpportunityPageRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { OpportunityPageRoutingModule } from './opportunity-routing.module';\n\nimport { OpportunityPage } from './opportunity.page';\nimport { SharedModule } from '../@shared/shared.module';\n\n@NgModule({\n  imports: [SharedModule, OpportunityPageRoutingModule],\n  declarations: [OpportunityPage],\n})\nexport class OpportunityPageModule {}\n","export default \".apply-checkbox ion-label {\\n  margin-left: 10px;\\n  white-space: normal;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3Bwb3J0dW5pdHkvb3Bwb3J0dW5pdHkucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsaUJBQUE7RUFDQSxtQkFBQTtBQUFKIiwiZmlsZSI6InNyYy9hcHAvb3Bwb3J0dW5pdHkvb3Bwb3J0dW5pdHkucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFwcGx5LWNoZWNrYm94IHtcbiAgaW9uLWxhYmVsIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICB9XG59XG4iXX0= */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { BasePage } from '../base/base.page';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Store } from '@ngxs/store';\nimport { UtilsService } from '../@core/utils.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavigationExtrasService } from '../@core/navigation-extras.service';\nimport { Constants } from '../@global/constants';\nimport { IElement } from '../@store/global-info/global-info.model';\nimport { Utils } from '../@global/utils';\nimport { CreateJobOfferAction } from '../@store/job-offers/job-offers.actions';\nimport { Subscription } from 'rxjs';\nimport { GlobalInfoState } from '../@store/global-info/global-info.state';\nimport { GetOpportunityTypeInfo, GetWorkAreaInfo } from '../@store/global-info/global-info.actions';\nimport { InformService } from '../@core/inform.service';\nimport { SportsModalComponent } from '../@shared/components/sports-modal/sports-modal.component';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-opportunity',\n  templateUrl: './opportunity.page.html',\n  styleUrls: ['./opportunity.page.scss'],\n})\nexport class OpportunityPage extends BasePage implements OnInit, OnDestroy {\n  public formGroup: FormGroup;\n  private profileId: string;\n  private locationData: { country: string; region: string; province: string; city: string; region_name: string };\n  public hasLocation = false;\n  public hasSport = false;\n  public opportunityLocation: string;\n  public workAreaList: IElement[];\n  public opportunityTypeList: IElement[];\n  public customActionSheetWorkAreaOptions: any;\n  public customActionSheetOpportunityTypeOptions: any;\n  public maxlength = Constants.MAX_PUBLICATION_DESCRIPTION_SIZE;\n  private workAreaSubscription: Subscription;\n  private opportunityTypeSubscription: Subscription;\n  public sportsList: IElement[] = [];\n\n  constructor(\n    router: Router,\n    location: Location,\n    store: Store,\n    utilsService: UtilsService,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private route: ActivatedRoute,\n    private navigationExtrasService: NavigationExtrasService,\n    private informService: InformService,\n    public modalController: ModalController\n  ) {\n    super(location, router, store, utilsService);\n  }\n\n  public doIonViewWillEnter(): void {\n    this.setLocationData();\n    this.store.dispatch(new GetOpportunityTypeInfo());\n    this.store.dispatch(new GetWorkAreaInfo());\n  }\n\n  private subscribeWorkAreaInfo(): void {\n    this.workAreaSubscription = this.store.select(GlobalInfoState.getWorkArea).subscribe((data) => {\n      this.workAreaList = data;\n    });\n  }\n\n  private subscribeOpportunityTypeInfo(): void {\n    this.opportunityTypeSubscription = this.store.select(GlobalInfoState.getOpportunities).subscribe((data) => {\n      this.opportunityTypeList = data;\n    });\n  }\n\n  ngOnInit() {\n    this.subscribeWorkAreaInfo();\n    this.subscribeOpportunityTypeInfo();\n    this.initForm();\n    this.profileId = this.route.snapshot.params['profileId'];\n\n    const workAreaTitle = this.translateService.instant(`formFields.workArea`);\n    this.customActionSheetWorkAreaOptions = {\n      header: workAreaTitle,\n    };\n    const opportunityTypeTitle = this.translateService.instant(`formFields.opportunityType`);\n    this.customActionSheetOpportunityTypeOptions = {\n      header: opportunityTypeTitle,\n    };\n  }\n\n  private initForm(): void {\n    this.formGroup = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required, Validators.maxLength(this.maxlength)]],\n      work_area: ['', [Validators.required]],\n      opportunity_type: ['', [Validators.required]],\n      website: [''],\n      responsibilities: ['', [Validators.maxLength(this.maxlength)]],\n      requirements: ['', [Validators.maxLength(this.maxlength)]],\n      check_email: [false],\n      check_website: [false],\n      contact_email: ['', [Validators.email, Validators.maxLength(Constants.MAX_LENGTH_USERNAME_COGNITO)]],\n    });\n  }\n\n  public setOptionSelected(option: number) {\n    if (option === 1) {\n      if (this.formGroup.get('check_email').value) {\n        // when select one, the other one is set to false\n        this.formGroup.get('check_website').setValue(false);\n        this.formGroup.get('contact_email').enable();\n        this.formGroup.get('contact_email').setValidators([Validators.required, Validators.email]);\n        this.formGroup.get('website').setValue('');\n        this.formGroup.get('website').clearValidators();\n        this.formGroup.get('website').disable();\n      }\n    } else {\n      if (this.formGroup.get('check_website').value) {\n        // when select one, the other one is set to false\n        this.formGroup.get('check_email').setValue(false);\n        this.formGroup.get('website').enable();\n        this.formGroup.get('website').setValidators([Validators.required, Validators.pattern(Constants.URL_PATTERN)]);\n        this.formGroup.get('contact_email').setValue('');\n        this.formGroup.get('contact_email').clearValidators();\n        this.formGroup.get('contact_email').disable();\n      }\n    }\n    this.formGroup.get('website').updateValueAndValidity();\n    this.formGroup.get('contact_email').updateValueAndValidity();\n  }\n\n  private setLocationData(): void {\n    if (this.navigationExtrasService.getExtras() && this.navigationExtrasService.getExtras().location) {\n      const location = this.navigationExtrasService.getExtras().location;\n\n      this.hasLocation = !!location.country;\n\n      if (this.hasLocation) {\n        this.opportunityLocation = Utils.generateUserFriendlyLocation(\n          location.country,\n          location.region,\n          location.city,\n          location.province,\n          location.region_name\n        );\n\n        this.locationData = {\n          country: location.country?.id,\n          region: location.region?.id,\n          province: location.province?.id,\n          city: location.city,\n          region_name: location.region_name,\n        };\n      }\n\n      this.navigationExtrasService.setExtras(null);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.disconnectObservers();\n  }\n\n  private disconnectObservers(): void {\n    if (this.opportunityTypeSubscription) {\n      this.opportunityTypeSubscription.unsubscribe();\n    }\n    if (this.workAreaSubscription) {\n      this.workAreaSubscription.unsubscribe();\n    }\n  }\n\n  public async openSportsModal() {\n    const modal = await this.modalController.create({\n      component: SportsModalComponent,\n      componentProps: {\n        sportsSelected: [...this.sportsList],\n      },\n    });\n\n    modal.onDidDismiss().then((response) => {\n      if (response.data) {\n        this.sportsList = [];\n        response.data.forEach((item: IElement) => {\n          this.sportsList.push(item);\n        });\n        this.hasSport = this.sportsList.length > 0;\n      }\n    });\n\n    return await modal.present();\n  }\n\n  saveOpportunity() {\n    if (this.utilsService.isValidForm(this.formGroup)) {\n      if (!this.formGroup.get('check_email').value && !this.formGroup.get('check_website').value) {\n        this.informService.showWarning('opportunity.selectOption');\n        return;\n      }\n\n      const input = { ...this.formGroup.value, ...this.locationData };\n\n      if (input.check_email) {\n        delete input.website;\n      } else if (input.check_website) {\n        delete input.contact_email;\n      }\n\n      delete input.check_email;\n      delete input.check_website;\n\n      input.sports = [...this.sportsList.map((item: IElement) => item.id)];\n\n      this.store.dispatch(new CreateJobOfferAction(this.profileId, input)).subscribe(\n        () => {\n          this.goBack();\n        },\n        (error) => {\n          console.log('Error creating opportunity');\n          console.log(error);\n        }\n      );\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}