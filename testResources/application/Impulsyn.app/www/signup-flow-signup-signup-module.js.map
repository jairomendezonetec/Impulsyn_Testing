{"version":3,"sources":["./src/app/signup-flow/signup/signup.page.html","./src/app/base/profile-image-editor-base.page.ts","./src/app/signup-flow/signup/signup-routing.module.ts","./src/app/signup-flow/signup/signup.module.ts","./src/app/signup-flow/signup/signup.page.scss","./src/app/signup-flow/signup/signup.page.ts"],"names":[],"mappings":"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","file":"signup-flow-signup-signup-module.js","sourcesContent":["export default \"<app-header [showBackButton]=\\\"showBackButton\\\" [titleImage]=\\\"logoPath\\\" (backButtonClick)=\\\"goBack()\\\"></app-header>\\n\\n<ion-content class=\\\"ion-padding background-with-dark-color\\\">\\n  <div class=\\\"flex-vertical-space\\\">\\n    <div class=\\\"flex-container\\\">\\n      <form [formGroup]=\\\"formGroup\\\">\\n        <ion-row class=\\\"flex-item\\\">\\n          <ion-col size=\\\"12\\\" class=\\\"ion-text-center ion-padding-bottom ion-margin-top ion-padding-top\\\">\\n            <div class=\\\"screen-extrabig-title\\\" [innerHTML]=\\\"'signup.title' | translate\\\"></div>\\n            <span class=\\\"regular-size\\\">{{'signup.subtitle' | translate}}</span>\\n          </ion-col>\\n        </ion-row>\\n        <div class=\\\"flex-item fill-all-line-centered ion-padding-vertical ion-margin-bottom\\\">\\n          <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n            <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n              <ion-label appPlatformMode>{{'formFields.email' | translate}}</ion-label>\\n              <ion-input\\n                type=\\\"email\\\"\\n                inputmode=\\\"email\\\"\\n                autocomplete=\\\"off\\\"\\n                name=\\\"email\\\"\\n                [formControlName]=\\\"'email'\\\"\\n                required\\n                data-test=\\\"email-input\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <app-show-errors [control]=\\\"formGroup.controls['email']\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n            <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n              <ion-label appPlatformMode>{{'formFields.pass' | translate}}</ion-label>\\n              <ion-input\\n                [type]=\\\"seePassword ? 'text' : 'password'\\\"\\n                name=\\\"password\\\"\\n                [formControlName]=\\\"'password'\\\"\\n                required\\n                maxlength=\\\"25\\\"\\n                data-test=\\\"password-input\\\"\\n                (ionFocus)=\\\"showInfoToast()\\\"\\n                class=\\\"pass-input\\\"\\n              ></ion-input>\\n              <app-icon-clicked\\n                color=\\\"secondary\\\"\\n                class=\\\"extrabig-size icon-input-end\\\"\\n                (buttonClick)=\\\"onSeePassword($event)\\\"\\n                [iconNameInitial]=\\\"'eye-outline'\\\"\\n                [iconNameTapped]=\\\"'eye-off-outline'\\\"\\n              ></app-icon-clicked>\\n            </ion-item>\\n            <app-show-errors [control]=\\\"formGroup.controls['password']\\\"></app-show-errors>\\n          </div>\\n        </div>\\n        <app-action-button-link\\n          [buttonText]=\\\"'signUp'\\\"\\n          [linkText]=\\\"'signup.goLogin'\\\"\\n          (actionButtonClick)=\\\"signUp()\\\"\\n          (actionLinkClick)=\\\"goLogin()\\\"\\n        ></app-action-button-link>\\n      </form>\\n    </div>\\n  </div>\\n</ion-content>\\n\";","import { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { SafeUrl } from '@angular/platform-browser';\nimport { Store } from '@ngxs/store';\nimport { Camera } from '@ionic-native/camera/ngx';\n\nimport { UtilsService } from '../@core/utils.service';\nimport { BasePage } from './base.page';\nimport { Utils } from '../@global/utils';\nimport { InformService } from '../@core/inform.service';\n\nexport class ProfileImageEditorBasePage extends BasePage {\n  public profileImage: SafeUrl;\n  public imageOriginalPath: string;\n\n  constructor(\n    location: Location,\n    router: Router,\n    store: Store,\n    utilsService: UtilsService,\n    protected camera: Camera,\n    protected informService: InformService\n  ) {\n    super(location, router, store, utilsService);\n  }\n\n  protected pickImageGallery = () => {\n    this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n  };\n\n  protected pickImageCamera = () => {\n    this.pickImage(this.camera.PictureSourceType.CAMERA);\n  };\n\n  protected async pickImage(sourceType: number): Promise<void> {\n    try {\n      const imageData = await this.utilsService.getMediaFromCameraPlugin(sourceType, this.camera.MediaType.PICTURE);\n\n      const { path, filename } = Utils.getPathAndFilenameFromUrl(imageData.imageOriginalPath);\n      const file = await this.utilsService.getFileFromSystemPath(path, filename);\n\n      if (!Utils.isImageMediaType(file.type)) {\n        this.informService.showWarning('createPost.wrongImageType');\n        return;\n      }\n\n      this.imageOriginalPath = imageData.imageOriginalPath;\n      this.profileImage = imageData.imageSource;\n    } catch (error) {\n      console.error('[ProfileImageEditorBasePage pickImage] error taking a picture');\n      console.error(error);\n\n      const capturedError = new Error('Error in pickImage: ' + error);\n      capturedError.name = '[ProfileImageEditorBasePage error]';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\nimport { SharedModule } from '../../@shared/shared.module';\n\n@NgModule({\n  imports: [SharedModule, SignupPageRoutingModule],\n  declarations: [SignupPage],\n})\nexport class SignupPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC1mbG93L3NpZ251cC9zaWdudXAucGFnZS5zY3NzIn0= */\";","import { Store } from '@ngxs/store';\nimport { SignUp } from '../../@store/auth/auth.actions';\nimport { take } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { NavigationExtrasService } from '../../@core/navigation-extras.service';\nimport { AWSErrorType } from '../../@core/errors/aws-error';\nimport { StorageService } from '../../@core/storage.service';\nimport { UtilsService } from '../../@core/utils.service';\nimport { InformService } from '../../@core/inform.service';\nimport { FormCustomValidators } from '../../@shared/validators/form-custom-validators';\nimport { CredentialsModel } from '../../login/model/credentials';\nimport { Constants } from '../../@global/constants';\nimport { AlertController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SignupBasePage } from '../signup-base.page';\nimport { GoogleAnalyticsService } from '../../@core/google-analytics.service';\nimport { Camera } from '@ionic-native/camera/ngx';\n\nconst PAGE_POSITION = 0;\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage extends SignupBasePage implements OnInit {\n  public formGroup: FormGroup;\n  public seePassword = false;\n  private toastShowed = false;\n  private infoToast: HTMLIonToastElement;\n\n  constructor(\n    router: Router,\n    location: Location,\n    store: Store,\n    utilsService: UtilsService,\n    camera: Camera,\n    informService: InformService,\n    storage: StorageService,\n    navigationExtrasService: NavigationExtrasService,\n    googleAnalyticsService: GoogleAnalyticsService,\n    private formBuilder: FormBuilder,\n    private alertController: AlertController,\n    private translateService: TranslateService\n  ) {\n    super(\n      location,\n      router,\n      store,\n      utilsService,\n      camera,\n      informService,\n      storage,\n      navigationExtrasService,\n      googleAnalyticsService\n    );\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  private initForm(): void {\n    this.formGroup = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.maxLength(Constants.MAX_LENGTH_USERNAME_COGNITO)]],\n      password: [\n        '',\n        [Validators.required, FormCustomValidators.validatePassPattern, FormCustomValidators.notAllowedEmojis],\n      ],\n    });\n  }\n\n  public onSeePassword($event) {\n    this.seePassword = !this.seePassword;\n  }\n\n  public async signUp(): Promise<void> {\n    if (this.utilsService.isValidForm(this.formGroup)) {\n      const userCredentials = new CredentialsModel(\n        this.formGroup.get('email').value,\n        this.formGroup.get('password').value\n      );\n\n      this.store\n        .dispatch(\n          new SignUp({\n            username: userCredentials.email,\n            password: userCredentials.password,\n          })\n        )\n        .pipe(take(1))\n        .subscribe(\n          async () => {\n            // set form data in local storage\n            await this.updateStorageDataObject('email', this.formGroup.get('email').value.trim());\n            await this.updateLastPage(PAGE_POSITION);\n\n            await this.storage.setRememberUser(true);\n            await this.storage.setCredentials(userCredentials);\n            await this.storage.setAvoidOnboardingPages(true);\n\n            // go next page\n            this.router.navigateByUrl('/verification-code');\n          },\n          async (error) => {\n            console.dir(error);\n            if (error.code === AWSErrorType.UsernameExistsException) {\n              const alert = await this.alertController.create({\n                cssClass: 'custom-alert',\n                header: 'Info',\n                message: this.translateService.instant('confirmEmail.usernameExistsExceptionAlert'),\n                buttons: [\n                  {\n                    text: this.translateService.instant('confirmEmail.modify'),\n                    role: 'cancel',\n                    cssClass: 'secondary',\n                    handler: () => {},\n                  },\n                  {\n                    text: this.translateService.instant('confirmEmail.login'),\n                    handler: () => {\n                      this.navigationExtrasService.setExtras({ userEmail: this.formGroup.get('email').value });\n                      this.router.navigateByUrl(`/login`);\n                    },\n                  },\n                ],\n              });\n              await alert.present();\n            }\n          }\n        );\n    }\n  }\n\n  public async showInfoToast() {\n    if (!this.toastShowed) {\n      this.toastShowed = true;\n      this.infoToast = await this.informService.showInfo('signup.passwordInfo', 0);\n    }\n  }\n\n  public goLogin() {\n    this.navigationExtrasService.setExtras({ showGoBack: true });\n    this.router.navigate(['/login']);\n  }\n\n  public ionViewWillLeave(): void {\n    if (this.infoToast) {\n      this.infoToast.dismiss();\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}