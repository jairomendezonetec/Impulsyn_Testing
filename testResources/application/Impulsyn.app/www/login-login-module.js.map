{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["export default \"<app-header [showBackButton]=\\\"showBackButton\\\" [titleImage]=\\\"logoPath\\\" (backButtonClick)=\\\"goBack()\\\"></app-header>\\n\\n<ion-content class=\\\"ion-padding background-with-dark-color\\\">\\n  <div class=\\\"flex-vertical-space\\\">\\n    <div class=\\\"flex-container\\\">\\n      <form [formGroup]=\\\"formGroup\\\">\\n        <ion-row class=\\\"flex-item\\\">\\n          <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n            <div class=\\\"screen-extrabig-title\\\" [innerHTML]=\\\"'login.title' | translate\\\"></div>\\n          </ion-col>\\n        </ion-row>\\n        <div class=\\\"flex-item ion-margin-vertical ion-padding-vertical fill-all-line-centered\\\">\\n          <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n            <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n              <ion-label appPlatformMode>{{'formFields.email' | translate}}</ion-label>\\n              <ion-input\\n                type=\\\"email\\\"\\n                inputmode=\\\"email\\\"\\n                autocomplete=\\\"off\\\"\\n                [formControlName]=\\\"'email'\\\"\\n                required\\n                data-test=\\\"email-input\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <app-show-errors [control]=\\\"formGroup.controls['email']\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"pr col-xs-12 col-sm-8 col-lg-6\\\">\\n            <ion-item lines=\\\"full\\\" class=\\\"ion-margin\\\">\\n              <ion-label appPlatformMode>{{'formFields.pass' | translate}}</ion-label>\\n              <ion-input\\n                [type]=\\\"seePassword ? 'text' : 'password'\\\"\\n                [formControlName]=\\\"'password'\\\"\\n                required\\n                maxlength=\\\"25\\\"\\n                data-test=\\\"password-input\\\"\\n                class=\\\"pass-input\\\"\\n              ></ion-input>\\n              <app-icon-clicked\\n                color=\\\"secondary\\\"\\n                class=\\\"extrabig-size icon-input-end\\\"\\n                (buttonClick)=\\\"onSeePassword()\\\"\\n                [iconNameInitial]=\\\"!seePassword? initialIconEye:tappedIconEye\\\"\\n                [iconNameTapped]=\\\"!seePassword? tappedIconEye:initialIconEye\\\"\\n              ></app-icon-clicked>\\n            </ion-item>\\n            <app-show-errors [control]=\\\"formGroup.controls['password']\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"flex-item ion-padding-top fill-all-line-centered\\\">\\n            <div class=\\\"col-xs-12 flex-row col-sm-8 col-lg-6\\\">\\n              <div class=\\\"col-6\\\">\\n                <ion-item class=\\\"ion-no-border\\\">\\n                  <ion-checkbox\\n                    name=\\\"remember\\\"\\n                    formControlName=\\\"remember\\\"\\n                    color=\\\"secondary\\\"\\n                    data-test=\\\"remember\\\"\\n                    [checked]=\\\"rememberCredentials\\\"\\n                  ></ion-checkbox>\\n                  <ion-label class=\\\"small-size\\\">{{ 'login.rememberMe' | translate }}</ion-label>\\n                </ion-item>\\n              </div>\\n              <div class=\\\"col-6 ion-padding-end ion-justify-content-end\\\">\\n                <a\\n                  (click)=\\\"forgotPassword()\\\"\\n                  color=\\\"white\\\"\\n                  class=\\\"small-size ion-text-end underline\\\"\\n                  data-test=\\\"forgot-password-link\\\"\\n                  >{{ 'login.forgotLink' |translate}}</a\\n                >\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <app-action-button-link\\n          [buttonText]=\\\"'signIn'\\\"\\n          [linkText]=\\\"'login.signUpText'\\\"\\n          (actionButtonClick)=\\\"logIn()\\\"\\n          (actionLinkClick)=\\\"navigateTo('/data-protection')\\\"\\n        ></app-action-button-link>\\n      </form>\\n      <ion-row class=\\\"flex-item ion-align-items-center w100 ion-justify-content-center\\\">\\n        <div class=\\\"col-xs-10 col-sm-6 col-lg-6 ion-text-center flex-container-vertical\\\">\\n          <span color=\\\"white\\\" class=\\\"ion-padding-vertical small-size\\\">v{{appVersion}}</span>\\n        </div>\\n      </ion-row>\\n    </div>\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\nimport { LoginPage } from './login.page';\nimport { SharedModule } from '../@shared/shared.module';\n\n@NgModule({\n  imports: [SharedModule, LoginPageRoutingModule],\n  declarations: [LoginPage],\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Store } from '@ngxs/store';\nimport { take } from 'rxjs/operators';\n\nimport { NavigationExtrasService } from '../@core/navigation-extras.service';\nimport { AWSErrorType } from '../@core/errors/aws-error';\nimport { FormCustomValidators } from '../@shared/validators/form-custom-validators';\nimport { StorageService } from '../@core/storage.service';\nimport { CredentialsModel } from './model/credentials';\nimport { BasePage } from '../base/base.page';\nimport { AuthState } from '../@store/auth/auth.state';\nimport { AnalyticsService } from '../@core/analytics.service';\nimport { Constants } from '../@global/constants';\nimport { UtilsService } from '../@core/utils.service';\nimport { SIGNUP_FLOW_PAGES } from '../signup-flow/signup-pages';\nimport { SetRootPage } from '../@store/common/common.actions';\nimport { UserState } from '../@store/user/user.state';\nimport { GoogleAnalyticsService } from '../@core/google-analytics.service';\nimport { GlobalInfoState } from '../@store/global-info/global-info.state';\nimport { environment } from '@env/environment';\nimport { Utils } from '../@global/utils';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage extends BasePage implements OnInit {\n  public formGroup: FormGroup;\n  public rememberCredentials = true;\n  public seePassword = false;\n  public appVersion = environment.version;\n  private emailFromOtherPage: string;\n  public initialIconEye = 'eye-outline';\n  public tappedIconEye = 'eye-off-outline';\n\n  constructor(\n    router: Router,\n    location: Location,\n    store: Store,\n    utilsService: UtilsService,\n    private formBuilder: FormBuilder,\n    private navigationExtrasService: NavigationExtrasService,\n    private storage: StorageService,\n    private analyticsService: AnalyticsService,\n    private googleAnalyticsService: GoogleAnalyticsService\n  ) {\n    super(location, router, store, utilsService);\n  }\n\n  ngOnInit() {\n    this.initForm();\n    // from signup process when email is already registered\n    this.emailFromOtherPage =\n      this.navigationExtrasService.getExtras() && this.navigationExtrasService.getExtras().userEmail;\n  }\n\n  async ionViewWillEnter() {\n    // check if login page is root in this case, as it can be both cases.\n    this.showBackButton = !!this.navigationExtrasService.getExtras()?.showGoBack;\n    this.store.dispatch(new SetRootPage(!this.showBackButton));\n    this.navigationExtrasService.setExtras(null);\n    if (this.emailFromOtherPage) {\n      this.formGroup.get('email').setValue(this.emailFromOtherPage);\n    } else {\n      await this.recoverCredentials();\n    }\n    this.resetEyeIcon();\n  }\n\n  private resetEyeIcon() {\n    this.seePassword = false;\n  }\n\n  private async recoverCredentials() {\n    const localValue = await this.storage.getRememberUser();\n    // without value, true by default. If value, keep it\n    this.rememberCredentials = localValue === null ? true : localValue;\n    if (this.rememberCredentials) {\n      this.formGroup.get('remember').setValue(this.rememberCredentials);\n      const credentials = await this.storage.getCredentials();\n      if (credentials) {\n        this.formGroup.get('email').setValue(credentials.email);\n        this.formGroup.get('password').setValue(credentials.password);\n      }\n    } else {\n      this.formGroup.get('email').reset();\n      this.formGroup.get('password').reset();\n    }\n  }\n\n  public onSeePassword() {\n    this.seePassword = !this.seePassword;\n  }\n\n  private initForm(): void {\n    this.formGroup = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.maxLength(Constants.MAX_LENGTH_USERNAME_COGNITO)]],\n      password: ['', [Validators.required, FormCustomValidators.validatePassPattern]],\n      remember: [this.rememberCredentials],\n    });\n  }\n\n  public logIn(): void {\n    if (this.utilsService.isValidForm(this.formGroup)) {\n      const userCredentials = new CredentialsModel(\n        this.formGroup.get('email').value,\n        this.formGroup.get('password').value\n      );\n      this.utilsService\n        .logIn({ username: userCredentials.email, password: userCredentials.password })\n        .pipe(take(1))\n        .subscribe(\n          async () => {\n            if (this.store.selectSnapshot(GlobalInfoState.getVersionInfo).user_needs_accept_app) {\n              this.router.navigate([Constants.DOWNLOAD_NEW_VERSION_PAGE]);\n              return;\n            }\n\n            this.googleAnalyticsService.userLogin();\n\n            await this.storage.setAvoidOnboardingPages(true);\n            const rememberUser = this.formGroup.get('remember').value;\n            await this.storage.setRememberUser(rememberUser);\n            await this.storage.setCredentials(rememberUser ? userCredentials : null);\n\n            const signUpCompleted = this.store.selectSnapshot(UserState.getUserInfo).signup_complete;\n\n            if (signUpCompleted) {\n              this.sendLoginEvent();\n              this.router.navigate([Constants.FIRST_PAGE_AFTER_LOGIN]);\n\n              // remove remaining signup data\n              this.utilsService.removeSignUpDataFromLocalStorage();\n\n              return;\n            }\n\n            console.log('Sign up process not finished');\n            const signupInProgress = await this.storage.getLastCompleteSignupPage();\n\n            if (\n              signupInProgress &&\n              !(await this.utilsService.hasUserFinishedSignUp(this.formGroup.get('email').value))\n            ) {\n              console.log('Sign up process not finished and data is in the local storage');\n\n              const lastPageIndex = SIGNUP_FLOW_PAGES.indexOf(signupInProgress);\n              this.navigationExtrasService.setExtras({ showGoBack: false });\n\n              this.router.navigate([`/${SIGNUP_FLOW_PAGES[lastPageIndex + 1]}`]);\n            } else {\n              console.log('Sign up process not finished but there is no data is in the local storage');\n              this.router.navigate([`/${Constants.FIRST_SIGNUP_PAGE_AFTER_VERIFICATION_CODE}`]);\n            }\n          },\n          (error) => {\n            if (error.code === AWSErrorType.UserNotConfirmedException) {\n              this.navigationExtrasService.setExtras({\n                fromLogin: true,\n                username: this.formGroup.get('email').value,\n                password: this.formGroup.get('password').value,\n              });\n              this.router.navigateByUrl('/verification-code');\n            }\n          }\n        );\n    }\n  }\n\n  public forgotPassword() {\n    if (this.formGroup.get('email').value !== '') {\n      this.navigationExtrasService.setExtras({\n        username: this.formGroup.get('email').value,\n      });\n    }\n    this.router.navigateByUrl('/forgot-password');\n  }\n\n  private sendLoginEvent(): void {\n    this.analyticsService.record(Constants.USER_LOGGED_IN_EVENT, {\n      userId: this.store.selectSnapshot(AuthState.getUserId),\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}